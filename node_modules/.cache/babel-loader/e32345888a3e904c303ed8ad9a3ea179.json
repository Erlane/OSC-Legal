{"ast":null,"code":"var _jsxFileName = \"/home/yasmin/Documentos/workspace/OSC/OSC-Legal/src/screens/onboarding/CreateFisicalPerson/FisicalPersonForm.js\";\n\n/* eslint-disable class-methods-use-this */\n\n/* eslint-disable no-mixed-spaces-and-tabs */\n// Libs\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components'; // Components\n\nimport Button from '../../../components/Button';\nimport Input from '../../../components/Input';\nimport ImageLogo from '../../../components/ImageLogo';\nimport FisicalPersonSucess from './FisicalPersonSucess'; // Images\n\nimport VisibilityOff from \"../../../assets/visibility-off.svg\";\nimport VisibilityOn from \"../../../assets/visibility-on.svg\"; // Redux\n\nimport { addNewUser } from '../../../dataflow/modules/sign-up-modules';\nimport { createUser } from '../../../api';\n\nconst mapStateToProps = state => ({\n  users: state.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addNewUser: user => {\n    dispatch(addNewUser(user));\n  }\n});\n\nexport const Form = styled.form`\n  min-width: 40%;\n  min-height: 100vh;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem 2rem;\n  margin: 1rem 0;\n\n  h1 {\n    font-size: 1.4rem;\n    font-family: \"Overpass\", ExtraBold;\n    text-transform: uppercase;\n    margin: 2rem 0 1.5rem 2.5rem;\n    align-self: flex-start;\n  }\n  @media (max-width: 425px) {\n    h1 {\n      margin: 2rem 0;\n      font-size: 1.3rem;\n    }\n  }\n\n  input {\n    border: ${props => props.withError && '1px solid red'};\n  }\n\n  @media (max-width: 375px) {\n    padding: 1rem;\n  }\n\n  span {\n    width: 90%;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n  }\n  @media (max-width: 425px) {\n    span {\n      width: 100%;\n      flex-direction: column;\n    }\n    p {\n      text-align: center;\n    }\n  }\n`;\nexport const Label = styled.label`\n  position: relative;\n  width: 90%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n  p {\n    align-self: flex-start;\n    text-transform: uppercase;\n    color: #85144b;\n    font-size: 0.7rem;\n    margin: 0.5rem 1.3rem;\n    font-family: Overpass, Bold;\n    font-weight: bold;\n  }\n\n  @media (max-width: 425px) {\n    p {\n      text-align: left;\n      margin-left: 0;\n    }\n  }\n`;\nexport const Error = styled.h6`\n  font-size: 0.6rem;\n  color: red;\n  align-self: flex-start;\n  font-weight: normal;\n  margin-left: 1.4rem;\n\n  @media (max-width: 425px) {\n    margin: 0;\n  }\n`;\nexport const InputForm = styled.input`\n  width: 90%;\n  height: 40px;\n  border: 1px solid #ffcfcd;\n  background: #fafafa;\n  padding: 0.5rem;\n  font-size: 0.9rem;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n`;\nexport const ImagePassword = styled.img`\n  position: absolute;\n  bottom: 1.5vh;\n  right: 0.7rem;\n  cursor: pointer;\n`;\nexport const TextTerms = styled.p`\n  font-size: 0.7rem;\n  margin: 0.5rem 0;\n  color: #505050;\n  font-family: Overpass, Regular;\n  text-align: center;\n\n  strong {\n    color: #85144b;\n    font-size: 0.7rem;\n    cursor: pointer;\n    text-decoration: underline;\n    margin: 0 0.2rem;\n    font-family: Overpass, Regular;\n  }\n`;\n\nclass FisicalPersonForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      togglePassword: false,\n      modalSucess: false,\n      user: {\n        name: '',\n        surname: '',\n        rg: '',\n        sendingBody: '',\n        uf: '',\n        birth: '',\n        cpf: '',\n        email: '',\n        telephone: '',\n        password: ''\n      },\n      isErrorRg: false,\n      isErrorPassword: false,\n      isErrorCpf: false,\n      isEmpty: false // dataUser: [],\n\n    };\n\n    this.togglePassword = ev => {\n      ev.preventDefault();\n      this.setState({\n        togglePassword: !this.state.togglePassword\n      });\n    };\n\n    this.handleModalSucess = () => {\n      this.setState({\n        modalSucess: !this.state.modalSucess\n      });\n    };\n\n    this.handleChange = (field, ev) => {\n      const {\n        user\n      } = this.state;\n      user[field] = ev.target.value;\n      this.setState({\n        user\n      });\n    };\n\n    this.handleSubmit = ev => {\n      ev.preventDefault();\n      this.errors();\n    };\n\n    this.errors = () => {\n      const {\n        user\n      } = this.state;\n      const {\n        name,\n        surname,\n        rg,\n        sendingBody,\n        uf,\n        birth,\n        cpf,\n        email,\n        telephone,\n        password\n      } = this.state.user;\n\n      if (password.length < 4) {\n        this.setState({\n          isErrorPassword: true\n        });\n      } else {\n        this.setState({\n          isErrorPassword: false\n        });\n      }\n\n      if (rg.length < 9 || rg.length > 9) {\n        this.setState({\n          isErrorRg: true\n        });\n      } else {\n        this.setState({\n          isErrorRg: false\n        });\n      }\n\n      if (cpf.length < 11 || cpf.length > 11) {\n        this.setState({\n          isErrorCpf: true\n        });\n      } else {\n        this.setState({\n          isErrorCpf: false\n        });\n      }\n\n      if (name === '' || surname === '' || rg === '' || sendingBody === '' || uf === '' || birth === '' || cpf === '' || email === '' || telephone === '' || password === '') {\n        this.setState({\n          isEmpty: true\n        });\n      } else {\n        this.setState({\n          isEmpty: false\n        });\n        this.props.addNewUser(user);\n        this.handleModalSucess();\n        const teste = {\n          user,\n          history: this.props.history\n        };\n        this.register(teste);\n      }\n    };\n  }\n\n  async register(user) {\n    try {\n      const createdUser = await createUser(user); // this.setState({ dataUser: createdUser.data });\n      // const response = this.state.dataUser;\n      // console.log('response', response)\n      // if (!response) {\n      // \treturn console.log('errrr');\n      // }\n      // this.props.history.replace('/fisicalpersonsucess');\n\n      console.log('createdUser', createdUser);\n    } catch (err) {\n      console.log('err', err);\n    }\n  }\n\n  render() {\n    const errorMessage = ['RG inválido', 'Senha fraca', 'CPF inválido', 'Preencha todos os valores'];\n    const {\n      isErrorPassword,\n      isErrorRg,\n      isErrorCpf,\n      modalSucess,\n      isEmpty\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(ImageLogo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"cadastrar pessoa f\\xEDsica\"), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Nome\"), React.createElement(Input, {\n      type: \"text\",\n      onChange: ev => this.handleChange('name', ev),\n      value: this.state.name,\n      placeholder: \"Nome\",\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Sobrenome\"), React.createElement(Input, {\n      type: \"text\",\n      onChange: ev => this.handleChange('surname', ev),\n      value: this.state.surname,\n      placeholder: \"Sobrenome\",\n      name: \"surname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"rg\"), React.createElement(InputForm, {\n      type: \"number\",\n      onChange: ev => this.handleChange('rg', ev),\n      value: this.state.rg,\n      placeholder: \"000000-0\",\n      name: \"rg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), isErrorRg && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, errorMessage[0])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, \"Org\\xE3o expedidor\"), React.createElement(InputForm, {\n      type: \"text\",\n      onChange: ev => this.handleChange('sendingBody', ev),\n      value: this.state.sendingBody,\n      name: \"sendingBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, errorMessage[3]))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"uf\"), React.createElement(InputForm, {\n      type: \"text\",\n      onChange: ev => this.handleChange('uf', ev),\n      value: this.state.uf,\n      name: \"uf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"data de nascimento\"), React.createElement(InputForm, {\n      type: \"number\",\n      onChange: ev => this.handleChange('birth', ev),\n      value: this.state.birth,\n      placeholder: \"02/01/2020\",\n      name: \"birth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, errorMessage[3]))), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, \"cpf\"), React.createElement(Input, {\n      type: \"number\",\n      onChange: ev => this.handleChange('cpf', ev),\n      value: this.state.cpf,\n      placeholder: \"000000-0\",\n      name: \"cpf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }), isErrorCpf && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, errorMessage[2])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"email\"), React.createElement(Input, {\n      type: \"email\",\n      onChange: ev => this.handleChange('email', ev),\n      value: this.state.email,\n      name: \"email\",\n      placeholder: \"name@mail.com\",\n      require: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"telefone\"), React.createElement(Input, {\n      type: \"tel\",\n      onChange: ev => this.handleChange('telephone', ev),\n      value: this.state.telephone,\n      placeholder: \"(00) 00000-0000\",\n      name: \"telephone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"password\"), React.createElement(Input, {\n      className: \"input-password\",\n      type: this.state.togglePassword === true ? 'text' : 'password',\n      onChange: ev => this.handleChange('password', ev),\n      value: this.state.password,\n      placeholder: \"Inserir password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }), this.state.togglePassword === true ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(ImagePassword, {\n      src: VisibilityOn,\n      onClick: this.togglePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    })) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(ImagePassword, {\n      src: VisibilityOff,\n      onClick: this.togglePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    })), isErrorPassword && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, errorMessage[1])), React.createElement(TextTerms, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, \"Clique abaixo para concordar com os\", React.createElement(\"strong\", {\n      onClick: this.props.handleModalTerms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, \"Termos de Servi\\xE7o\"), \"e registrar.\"), React.createElement(Button, {\n      text: \"concordar e criar conta\",\n      type: \"submit\" // onClick={this.handleSubmit}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FisicalPersonForm);","map":{"version":3,"sources":["/home/yasmin/Documentos/workspace/OSC/OSC-Legal/src/screens/onboarding/CreateFisicalPerson/FisicalPersonForm.js"],"names":["React","Component","connect","styled","Button","Input","ImageLogo","FisicalPersonSucess","addNewUser","createUser","mapStateToProps","state","users","mapDispatchToProps","dispatch","user","Form","form","props","withError","Label","label","Error","h6","InputForm","input","ImagePassword","img","TextTerms","p","FisicalPersonForm","togglePassword","modalSucess","name","surname","rg","sendingBody","uf","birth","cpf","email","telephone","password","isErrorRg","isErrorPassword","isErrorCpf","isEmpty","ev","preventDefault","setState","handleModalSucess","handleChange","field","target","value","handleSubmit","errors","length","teste","history","register","createdUser","console","log","err","render","errorMessage","VisibilityOn","VisibilityOff","handleModalTerms"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable no-mixed-spaces-and-tabs */\n\n// Libs\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\n// Components\nimport Button from '../../../components/Button';\nimport Input from '../../../components/Input';\nimport ImageLogo from '../../../components/ImageLogo';\nimport FisicalPersonSucess from './FisicalPersonSucess';\n\n// Images\nimport VisibilityOff from '../../../assets/visibility-off.svg';\nimport VisibilityOn from '../../../assets/visibility-on.svg';\n\n// Redux\nimport { addNewUser } from '../../../dataflow/modules/sign-up-modules';\n\nimport { createUser } from '../../../api';\n\nconst mapStateToProps = state => ({\n\tusers: state.users,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\taddNewUser: (user) => {\n\t\tdispatch(addNewUser(user));\n\t},\n});\n\nexport const Form = styled.form`\n  min-width: 40%;\n  min-height: 100vh;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem 2rem;\n  margin: 1rem 0;\n\n  h1 {\n    font-size: 1.4rem;\n    font-family: \"Overpass\", ExtraBold;\n    text-transform: uppercase;\n    margin: 2rem 0 1.5rem 2.5rem;\n    align-self: flex-start;\n  }\n  @media (max-width: 425px) {\n    h1 {\n      margin: 2rem 0;\n      font-size: 1.3rem;\n    }\n  }\n\n  input {\n    border: ${props => props.withError && '1px solid red'};\n  }\n\n  @media (max-width: 375px) {\n    padding: 1rem;\n  }\n\n  span {\n    width: 90%;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n  }\n  @media (max-width: 425px) {\n    span {\n      width: 100%;\n      flex-direction: column;\n    }\n    p {\n      text-align: center;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  width: 90%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n  p {\n    align-self: flex-start;\n    text-transform: uppercase;\n    color: #85144b;\n    font-size: 0.7rem;\n    margin: 0.5rem 1.3rem;\n    font-family: Overpass, Bold;\n    font-weight: bold;\n  }\n\n  @media (max-width: 425px) {\n    p {\n      text-align: left;\n      margin-left: 0;\n    }\n  }\n`;\n\nexport const Error = styled.h6`\n  font-size: 0.6rem;\n  color: red;\n  align-self: flex-start;\n  font-weight: normal;\n  margin-left: 1.4rem;\n\n  @media (max-width: 425px) {\n    margin: 0;\n  }\n`;\nexport const InputForm = styled.input`\n  width: 90%;\n  height: 40px;\n  border: 1px solid #ffcfcd;\n  background: #fafafa;\n  padding: 0.5rem;\n  font-size: 0.9rem;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n`;\n\nexport const ImagePassword = styled.img`\n  position: absolute;\n  bottom: 1.5vh;\n  right: 0.7rem;\n  cursor: pointer;\n`;\nexport const TextTerms = styled.p`\n  font-size: 0.7rem;\n  margin: 0.5rem 0;\n  color: #505050;\n  font-family: Overpass, Regular;\n  text-align: center;\n\n  strong {\n    color: #85144b;\n    font-size: 0.7rem;\n    cursor: pointer;\n    text-decoration: underline;\n    margin: 0 0.2rem;\n    font-family: Overpass, Regular;\n  }\n`;\n\nclass FisicalPersonForm extends Component {\n  state = {\n  \ttogglePassword: false,\n  \tmodalSucess: false,\n  \tuser: {\n  \t\tname: '',\n  \t\tsurname: '',\n  \t\trg: '',\n  \t\tsendingBody: '',\n  \t\tuf: '',\n  \t\tbirth: '',\n  \t\tcpf: '',\n  \t\temail: '',\n  \t\ttelephone: '',\n  \t\tpassword: '',\n  \t},\n  \tisErrorRg: false,\n  \tisErrorPassword: false,\n  \tisErrorCpf: false,\n  \tisEmpty: false,\n\n  \t// dataUser: [],\n  };\n\n  async register(user) {\n  \ttry {\n  \t\tconst createdUser = await createUser(user);\n\n  \t\t// this.setState({ dataUser: createdUser.data });\n\n  \t\t// const response = this.state.dataUser;\n  \t\t// console.log('response', response)\n\n  \t\t// if (!response) {\n  \t\t// \treturn console.log('errrr');\n  \t\t// }\n\n\t\t\t// this.props.history.replace('/fisicalpersonsucess');\n\n  \t\tconsole.log('createdUser', createdUser);\n  \t} catch (err) {\n  \t\tconsole.log('err', err);\n  \t}\n  }\n\n  togglePassword = (ev) => {\n  \tev.preventDefault();\n  \tthis.setState({\n  \t\ttogglePassword: !this.state.togglePassword,\n  \t});\n  };\n\n  handleModalSucess = () => {\n  \tthis.setState({\n  \t\tmodalSucess: !this.state.modalSucess,\n  \t});\n  };\n\n  handleChange = (field, ev) => {\n  \tconst { user } = this.state;\n  \tuser[field] = ev.target.value;\n  \tthis.setState({ user });\n  };\n\n  handleSubmit = (ev) => {\n  \tev.preventDefault();\n  \tthis.errors();\n  };\n\n  errors = () => {\n  \tconst { user } = this.state;\n  \tconst {\n  \t\tname,\n  \t\tsurname,\n  \t\trg,\n  \t\tsendingBody,\n  \t\tuf,\n  \t\tbirth,\n  \t\tcpf,\n  \t\temail,\n  \t\ttelephone,\n  \t\tpassword,\n  \t} = this.state.user;\n\n  \tif (password.length < 4) {\n  \t\tthis.setState({ isErrorPassword: true });\n  \t} else {\n  \t\tthis.setState({ isErrorPassword: false });\n  \t}\n  \tif (rg.length < 9 || rg.length > 9) {\n  \t\tthis.setState({ isErrorRg: true });\n  \t} else {\n  \t\tthis.setState({ isErrorRg: false });\n  \t}\n  \tif (cpf.length < 11 || cpf.length > 11) {\n  \t\tthis.setState({ isErrorCpf: true });\n  \t} else {\n  \t\tthis.setState({ isErrorCpf: false });\n  \t}\n  \tif (\n  \t\tname === ''\n      || surname === ''\n      || rg === ''\n      || sendingBody === ''\n      || uf === ''\n      || birth === ''\n      || cpf === ''\n      || email === ''\n      || telephone === ''\n      || password === ''\n  \t) {\n  \t\tthis.setState({ isEmpty: true });\n  \t} else {\n  \t\tthis.setState({ isEmpty: false });\n  \t\tthis.props.addNewUser(user);\n  \t\tthis.handleModalSucess();\n\n  \t\tconst teste = {\n  \t\t\tuser,\n  \t\t\thistory: this.props.history,\n  \t\t};\n\n  \t\tthis.register(teste);\n  \t}\n  };\n\n  render() {\n  \tconst errorMessage = [\n  \t\t'RG inválido',\n  \t\t'Senha fraca',\n  \t\t'CPF inválido',\n  \t\t'Preencha todos os valores',\n  \t];\n\n  \tconst {\n  \t\tisErrorPassword,\n  \t\tisErrorRg,\n  \t\tisErrorCpf,\n  \t\tmodalSucess,\n  \t\tisEmpty,\n  \t} = this.state;\n\n  \treturn (\n  \t\t<>\n  \t\t\t{/* {modalSucess === true ? (\n  \t\t\t\t<FisicalPersonSucess handleModalSucess={this.handleModalSucess} />\n  \t\t\t) : ( */}\n  \t\t\t\t<Form onSubmit={this.handleSubmit}>\n  \t\t\t\t\t<ImageLogo />\n  \t\t\t\t\t<h1>cadastrar pessoa física</h1>\n  \t\t\t\t\t<Label>\n  \t\t\t\t\t\t<p>Nome</p>\n  \t\t\t\t\t\t<Input\n  \t\t\t\t\t\t\ttype=\"text\"\n  \t\t\t\t\t\t\tonChange={ev => this.handleChange('name', ev)}\n  \t\t\t\t\t\t\tvalue={this.state.name}\n  \t\t\t\t\t\t\tplaceholder=\"Nome\"\n  \t\t\t\t\t\t\tname=\"name\"\n  \t\t\t\t\t\t/>\n  \t\t\t\t\t\t{isEmpty && <Error>{errorMessage[3]}</Error>}\n  \t\t\t\t\t</Label>\n  \t\t\t\t\t<Label>\n  \t\t\t\t\t\t<p>Sobrenome</p>\n  \t\t\t\t\t\t<Input\n  \t\t\t\t\t\t\ttype=\"text\"\n  \t\t\t\t\t\t\tonChange={ev => this.handleChange('surname', ev)}\n  \t\t\t\t\t\t\tvalue={this.state.surname}\n  \t\t\t\t\t\t\tplaceholder=\"Sobrenome\"\n  \t\t\t\t\t\t\tname=\"surname\"\n  \t\t\t\t\t\t/>\n  \t\t\t\t\t\t{isEmpty && <Error>{errorMessage[3]}</Error>}\n  \t\t\t\t\t</Label>\n  \t\t\t\t\t<span>\n  \t\t\t\t\t\t<Label>\n  \t\t\t\t\t\t\t<p>rg</p>\n  \t\t\t\t\t\t\t<InputForm\n  \t\t\t\t\t\t\t\ttype=\"number\"\n  \t\t\t\t\t\t\t\tonChange={ev => this.handleChange('rg', ev)}\n  \t\t\t\t\t\t\t\tvalue={this.state.rg}\n  \t\t\t\t\t\t\t\tplaceholder=\"000000-0\"\n  \t\t\t\t\t\t\t\tname=\"rg\"\n  \t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t{isErrorRg && <Error>{errorMessage[0]}</Error>}\n  \t\t\t\t\t\t</Label>\n  \t\t\t\t\t\t<Label>\n  \t\t\t\t\t\t\t<p>Orgão expedidor</p>\n  \t\t\t\t\t\t\t<InputForm\n  \t\t\t\t\t\t\t\ttype=\"text\"\n  \t\t\t\t\t\t\t\tonChange={ev => this.handleChange('sendingBody', ev)}\n  \t\t\t\t\t\t\t\tvalue={this.state.sendingBody}\n  \t\t\t\t\t\t\t\tname=\"sendingBody\"\n  \t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t{isEmpty && <Error>{errorMessage[3]}</Error>}\n  \t\t\t\t\t\t</Label>\n  \t\t\t\t\t</span>\n  \t\t\t\t\t<span>\n  \t\t\t\t\t\t<Label>\n  \t\t\t\t\t\t\t<p>uf</p>\n  \t\t\t\t\t\t\t<InputForm\n  \t\t\t\t\t\t\t\ttype=\"text\"\n  \t\t\t\t\t\t\t\tonChange={ev => this.handleChange('uf', ev)}\n  \t\t\t\t\t\t\t\tvalue={this.state.uf}\n  \t\t\t\t\t\t\t\tname=\"uf\"\n  \t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t{isEmpty && <Error>{errorMessage[3]}</Error>}\n  \t\t\t\t\t\t</Label>\n  \t\t\t\t\t\t<Label>\n  \t\t\t\t\t\t\t<p>data de nascimento</p>\n  \t\t\t\t\t\t\t<InputForm\n  \t\t\t\t\t\t\t\ttype=\"number\"\n  \t\t\t\t\t\t\t\tonChange={ev => this.handleChange('birth', ev)}\n  \t\t\t\t\t\t\t\tvalue={this.state.birth}\n  \t\t\t\t\t\t\t\tplaceholder=\"02/01/2020\"\n  \t\t\t\t\t\t\t\tname=\"birth\"\n  \t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t{isEmpty && <Error>{errorMessage[3]}</Error>}\n  \t\t\t\t\t\t</Label>\n  \t\t\t\t\t</span>\n  \t\t\t\t\t<Label>\n  \t\t\t\t\t\t<p>cpf</p>\n  \t\t\t\t\t\t<Input\n  \t\t\t\t\t\t\ttype=\"number\"\n  \t\t\t\t\t\t\tonChange={ev => this.handleChange('cpf', ev)}\n  \t\t\t\t\t\t\tvalue={this.state.cpf}\n  \t\t\t\t\t\t\tplaceholder=\"000000-0\"\n  \t\t\t\t\t\t\tname=\"cpf\"\n  \t\t\t\t\t\t/>\n\n  \t\t\t\t\t\t{isErrorCpf && <Error>{errorMessage[2]}</Error>}\n  \t\t\t\t\t</Label>\n  \t\t\t\t\t<Label>\n  \t\t\t\t\t\t<p>email</p>\n  \t\t\t\t\t\t<Input\n  \t\t\t\t\t\t\ttype=\"email\"\n  \t\t\t\t\t\t\tonChange={ev => this.handleChange('email', ev)}\n  \t\t\t\t\t\t\tvalue={this.state.email}\n  \t\t\t\t\t\t\tname=\"email\"\n  \t\t\t\t\t\t\tplaceholder=\"name@mail.com\"\n  \t\t\t\t\t\t\trequire\n  \t\t\t\t\t\t/>\n\n  \t\t\t\t\t\t{isEmpty && <Error>{errorMessage[3]}</Error>}\n  \t\t\t\t\t</Label>\n  \t\t\t\t\t<Label>\n  \t\t\t\t\t\t<p>telefone</p>\n  \t\t\t\t\t\t<Input\n  \t\t\t\t\t\t\ttype=\"tel\"\n  \t\t\t\t\t\t\tonChange={ev => this.handleChange('telephone', ev)}\n  \t\t\t\t\t\t\tvalue={this.state.telephone}\n  \t\t\t\t\t\t\tplaceholder=\"(00) 00000-0000\"\n  \t\t\t\t\t\t\tname=\"telephone\"\n  \t\t\t\t\t\t/>\n  \t\t\t\t\t\t{isEmpty && <Error>{errorMessage[3]}</Error>}\n  \t\t\t\t\t</Label>\n  \t\t\t\t\t<Label>\n  \t\t\t\t\t\t<p>password</p>\n  \t\t\t\t\t\t<Input\n  \t\t\t\t\t\t\tclassName=\"input-password\"\n  \t\t\t\t\t\t\ttype={this.state.togglePassword === true ? 'text' : 'password'}\n  \t\t\t\t\t\t\tonChange={ev => this.handleChange('password', ev)}\n  \t\t\t\t\t\t\tvalue={this.state.password}\n  \t\t\t\t\t\t\tplaceholder=\"Inserir password\"\n  \t\t\t\t\t\t\tname=\"password\"\n  \t\t\t\t\t\t/>\n  \t\t\t\t\t\t{this.state.togglePassword === true ? (\n  \t\t\t\t\t\t\t<span>\n  \t\t\t\t\t\t\t\t<ImagePassword\n  \t\t\t\t\t\t\t\t\tsrc={VisibilityOn}\n  \t\t\t\t\t\t\t\t\tonClick={this.togglePassword}\n  \t\t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t</span>\n  \t\t\t\t\t\t) : (\n  \t\t\t\t\t\t\t<span>\n  \t\t\t\t\t\t\t\t<ImagePassword\n  \t\t\t\t\t\t\t\t\tsrc={VisibilityOff}\n  \t\t\t\t\t\t\t\t\tonClick={this.togglePassword}\n  \t\t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t</span>\n  \t\t\t\t\t\t)}\n  \t\t\t\t\t\t{isErrorPassword && <Error>{errorMessage[1]}</Error>}\n  \t\t\t\t\t</Label>\n  \t\t\t\t\t<TextTerms>\n              Clique abaixo para concordar com os\n  \t\t\t\t\t\t<strong onClick={this.props.handleModalTerms}>\n                Termos de Serviço\n  \t\t\t\t\t\t</strong>\n              e registrar.\n  \t\t\t\t\t</TextTerms>\n  \t\t\t\t\t<Button\n  \t\t\t\t\t\ttext=\"concordar e criar conta\"\n  \t\t\t\t\t\ttype=\"submit\"\n  \t\t\t\t\t\t// onClick={this.handleSubmit}\n  \t\t\t\t\t/>\n  \t\t\t\t</Form>\n  \t\t\t{/* )} */}\n  \t\t</>\n  \t);\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FisicalPersonForm);\n"]},"metadata":{},"sourceType":"module"}