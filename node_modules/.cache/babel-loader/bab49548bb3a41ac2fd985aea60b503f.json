{"ast":null,"code":"var _jsxFileName = \"/home/evainaweb-06/Documentos/workspace/OSC-Legal/src/screens/onboarding/User/UserForm.js\";\n\n/* eslint-disable class-methods-use-this */\n\n/* eslint-disable indent */\n\n/* eslint-disable no-mixed-spaces-and-tabs */\n\n/* eslint-disable no-dupe-class-members */\n// Libs\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components'; // Components\n\nimport Button from '../../../components/Button';\nimport Input from '../../../components/Input';\nimport ImageLogo from '../../../components/ImageLogo';\nimport FisicalPersonSucess from './UserSucess';\nimport { Container } from './CreateUserScreen'; // Images\n\nimport VisibilityOff from \"../../../assets/visibility-off.svg\";\nimport VisibilityOn from \"../../../assets/visibility-on.svg\"; // Redux\n\nimport { addNewUser } from '../../../dataflow/modules/sign-up-modules';\n\nconst mapStateToProps = state => ({\n  signup: state.signup\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addNewUser: user => {\n    dispatch(addNewUser(user));\n  }\n});\n\nconst Form = styled.form`\n  min-width: 35%;\n  min-height: 100vh;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n  border-radius: 3px;\n  box-shadow: 0 1px 2px #00000029;\n\n  input {\n    border: ${props => props.withError === true ? '1px solid #f00' : '1px solid #ffcfcd;'};\n  }\n\n  @media (max-width: 768px) {\n    margin-top: 1rem;\n    margin-bottom: 0.5rem;\n    padding: 0 2rem;\n  }\n\n  @media (max-width: 648px) {\n    width: 100vw;\n    min-height: 106vh;\n    margin: 0;\n  }\n`;\nconst BlockSmallerInput = styled.span`\n    width: 90%;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n\n    @media(max-width: 768px){\n      width: 95%;\n    }\n\n    @media(max-width: 648px){\n      width:  100%;\n    }\n`;\nconst TitleForm = styled.h1`\n  font-size: 1.3rem;\n  font-family: \"Overpass\", ExtraBold;\n  text-transform: uppercase;\n  margin: 2rem 0 2.2rem 2.6rem;\n  align-self: flex-start;\n  \n  @media (max-width: 648px) {\n      margin: 2rem 0;\n      font-size: 1.3rem;\n      align-self: center;\n    }\n`;\nconst Label = styled.label`\n  position: relative;\n  width: 90%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n    @media(max-width: 768px){\n      width: 95%;\n    }\n\n  @media (max-width: 648px) {\n      width: 95%;\n      margin-left: 0.3rem;\n  }\n  @media(max-width: 425px){\n      width: 100%;\n  }\n`;\nconst ParagraphInput = styled.p`\n    align-self: flex-start;\n    text-transform: uppercase;\n    color: #85144b;\n    font-size: 0.8rem;\n    margin: 1.5rem 1.3rem 1rem 1.3rem;\n    font-family: Overpass;\n    font-weight: bold;\n\n    @media (max-width: 425px) {\n      font-size: 0.7rem;\n      text-align: left;\n      margin-left: 0.2rem;\n    }\n`;\nconst Error = styled.h6`\n  font-size: 0.6rem;\n  color: #f00;\n  align-self: flex-start;\n  font-weight: normal;\n  margin-left: 1.4rem;\n\n  @media (max-width: 425px) {\n    margin: 0;\n  }\n`;\nconst ErrorEmpty = styled.h6`\n  font-size: 0.7rem;\n  color: #F00;\n  align-self: flex-start;\n  font-weight: normal;\n  margin-left: 2.5rem;\n`;\nconst ImagePassword = styled.img`\n  position: absolute;\n  bottom: 1.2rem;\n  right: 0.5rem;\n  cursor: pointer;\n`;\nconst TextTerms = styled.p`\n  font-size: 0.8rem;\n  margin: 1.25rem ;\n  margin-bottom: 1.5rem;\n  color: #505050;\n  font-family: Overpass, Regular;\n  text-align: center;\n\n  strong {\n    color: #85144b;\n    font-size: 0.7rem;\n    cursor: pointer;\n    text-decoration: underline;\n    margin: 0 0.2rem;\n    font-family: Overpass, Regular;\n  }\n\n  @media(max-width: 648px){\n    font-size: 0.6rem;\n  }\n`;\n\nclass FisicalPersonForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      togglePassword: false,\n      modalSucess: false,\n      user: {\n        name: '',\n        surname: '',\n        rg: '',\n        sendingBody: '',\n        uf: '',\n        birth: '',\n        cpf: '',\n        email: '',\n        telephone: '',\n        password: ''\n      },\n      isErrorRg: false,\n      isErrorPassword: false,\n      isErrorCpf: false,\n      isEmpty: false,\n      dataUser: []\n    };\n\n    this.togglePassword = ev => {\n      ev.preventDefault();\n      this.setState({\n        togglePassword: !this.state.togglePassword\n      });\n    };\n\n    this.togglePassword = ev => {\n      ev.preventDefault();\n      this.setState({\n        togglePassword: !this.state.togglePassword\n      });\n    };\n\n    this.handleModalSucess = () => {\n      this.setState({\n        modalSucess: !this.state.modalSucess\n      });\n    };\n\n    this.handleChange = (field, ev) => {\n      const {\n        user\n      } = this.state;\n      user[field] = ev.target.value;\n      this.setState({\n        user\n      });\n    };\n\n    this.handleSubmit = ev => {\n      ev.preventDefault();\n      const {\n        user\n      } = this.state;\n      const {\n        rg,\n        cpf,\n        password\n      } = this.state.user;\n\n      if (rg.length < 9 || cpf.length < 11 || password.length < 4) {\n        this.errors();\n        this.setState({\n          isErrorCpf: true,\n          isErrorPassword: true,\n          isErrorRg: true\n        });\n      } else if (rg.length == 9 && cpf.length == 11 && password.length > 4) {\n        this.setState({\n          isErrorRg: false,\n          isErrorPassword: false,\n          isErrorCpf: false\n        });\n        this.props.addNewUser(user);\n        this.handleModalSucess();\n      }\n    };\n\n    this.errors = () => {\n      const {\n        user\n      } = this.state;\n      const {\n        name,\n        surname,\n        rg,\n        sendingBody,\n        uf,\n        birth,\n        cpf,\n        email,\n        telephone,\n        password\n      } = this.state.user;\n\n      if (name, surname, rg, sendingBody, uf, birth, cpf, email, telephone, password === '') {\n        this.setState({\n          isEmpty: true\n        });\n      } else {\n        this.setState({\n          isEmpty: false\n        });\n      }\n    };\n  }\n\n  render() {\n    const errorMessage = ['RG inválido', 'Senha fraca', 'CPF inválido', 'Preencha todos os campos', 'E-mail inválido', 'Uf inválida', 'Orgão expedidor inválido'];\n    const {\n      isErrorPassword,\n      isErrorRg,\n      isErrorCpf,\n      modalSucess,\n      isEmpty,\n      isErrorOrgao,\n      isErrorUf,\n      isErrorEmail\n    } = this.state;\n    return React.createElement(React.Fragment, null, modalSucess === true ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(FisicalPersonSucess, {\n      handleModalSucess: this.handleModalSucess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    })) : React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      withError: (isEmpty, isErrorEmail, isErrorRg, isErrorCpf, isErrorOrgao, isErrorUf, isErrorPassword),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(ImageLogo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(TitleForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"cadastrar pessoa f\\xEDsica\"), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(ParagraphInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Nome\"), React.createElement(Input, {\n      type: \"text\",\n      onChange: ev => this.handleChange('name', ev),\n      value: this.state.name,\n      placeholder: \"Nome\",\n      name: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    })), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(ParagraphInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Sobrenome\"), React.createElement(Input, {\n      type: \"text\",\n      onChange: ev => this.handleChange('surname', ev),\n      value: this.state.surname,\n      placeholder: \"Sobrenome\",\n      name: \"sobrenome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    })), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(ParagraphInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"cpf\"), React.createElement(Input, {\n      type: \"number\",\n      onChange: ev => this.handleChange('cpf', ev),\n      value: this.state.cpf,\n      placeholder: \"000000-0\",\n      name: \"cpf\",\n      min: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }), isErrorCpf && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, errorMessage[2])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(ParagraphInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"email\"), React.createElement(Input, {\n      type: \"email\",\n      onChange: ev => this.handleChange('email', ev),\n      value: this.state.email,\n      name: \"email\",\n      placeholder: \"nome@mail.com\",\n      require: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    })), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(ParagraphInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"telefone\"), React.createElement(Input, {\n      type: \"tel\",\n      onChange: ev => this.handleChange('telephone', ev),\n      value: this.state.telephone,\n      placeholder: \"(00) 00000-0000\",\n      name: \"telefone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    })), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(ParagraphInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"senha\"), React.createElement(Input, {\n      className: \"input-password\",\n      type: this.state.togglePassword === true ? 'text' : 'password',\n      onChange: ev => this.handleChange('password', ev),\n      value: this.state.password,\n      placeholder: \"Inserir senha\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), this.state.togglePassword === true ? React.createElement(BlockSmallerInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(ImagePassword, {\n      src: VisibilityOn,\n      onClick: this.togglePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    })) : React.createElement(BlockSmallerInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(ImagePassword, {\n      src: VisibilityOff,\n      onClick: this.togglePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    })), isErrorPassword && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, errorMessage[1])), React.createElement(TextTerms, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"Clique abaixo para concordar com os\", React.createElement(\"strong\", {\n      onClick: () => this.props.handleModalTerms(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Termos de Servi\\xE7o\"), \"e registrar.\"), isEmpty && React.createElement(ErrorEmpty, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, errorMessage[3]), React.createElement(Button, {\n      text: \"concordar e criar conta\",\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FisicalPersonForm);","map":{"version":3,"sources":["/home/evainaweb-06/Documentos/workspace/OSC-Legal/src/screens/onboarding/User/UserForm.js"],"names":["React","Component","connect","styled","Button","Input","ImageLogo","FisicalPersonSucess","Container","addNewUser","mapStateToProps","state","signup","mapDispatchToProps","dispatch","user","Form","form","props","withError","BlockSmallerInput","span","TitleForm","h1","Label","label","ParagraphInput","p","Error","h6","ErrorEmpty","ImagePassword","img","TextTerms","FisicalPersonForm","togglePassword","modalSucess","name","surname","rg","sendingBody","uf","birth","cpf","email","telephone","password","isErrorRg","isErrorPassword","isErrorCpf","isEmpty","dataUser","ev","preventDefault","setState","handleModalSucess","handleChange","field","target","value","handleSubmit","length","errors","render","errorMessage","isErrorOrgao","isErrorUf","isErrorEmail","VisibilityOn","VisibilityOff","handleModalTerms"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable indent */\n/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable no-dupe-class-members */\n\n// Libs\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\n// Components\nimport Button from '../../../components/Button';\nimport Input from '../../../components/Input';\nimport ImageLogo from '../../../components/ImageLogo';\nimport FisicalPersonSucess from './UserSucess';\nimport { Container } from './CreateUserScreen';\n\n// Images\nimport VisibilityOff from '../../../assets/visibility-off.svg';\nimport VisibilityOn from '../../../assets/visibility-on.svg';\n\n// Redux\nimport { addNewUser } from '../../../dataflow/modules/sign-up-modules';\n\nconst mapStateToProps = state => ({\n  signup: state.signup,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addNewUser: (user) => {\n    dispatch(addNewUser(user));\n  },\n});\n\nconst Form = styled.form`\n  min-width: 35%;\n  min-height: 100vh;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n  border-radius: 3px;\n  box-shadow: 0 1px 2px #00000029;\n\n  input {\n    border: ${props => (props.withError === true ? '1px solid #f00' : '1px solid #ffcfcd;')};\n  }\n\n  @media (max-width: 768px) {\n    margin-top: 1rem;\n    margin-bottom: 0.5rem;\n    padding: 0 2rem;\n  }\n\n  @media (max-width: 648px) {\n    width: 100vw;\n    min-height: 106vh;\n    margin: 0;\n  }\n`;\n\nconst BlockSmallerInput = styled.span`\n    width: 90%;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n\n    @media(max-width: 768px){\n      width: 95%;\n    }\n\n    @media(max-width: 648px){\n      width:  100%;\n    }\n`;\n\nconst TitleForm = styled.h1`\n  font-size: 1.3rem;\n  font-family: \"Overpass\", ExtraBold;\n  text-transform: uppercase;\n  margin: 2rem 0 2.2rem 2.6rem;\n  align-self: flex-start;\n  \n  @media (max-width: 648px) {\n      margin: 2rem 0;\n      font-size: 1.3rem;\n      align-self: center;\n    }\n`;\n\nconst Label = styled.label`\n  position: relative;\n  width: 90%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n    @media(max-width: 768px){\n      width: 95%;\n    }\n\n  @media (max-width: 648px) {\n      width: 95%;\n      margin-left: 0.3rem;\n  }\n  @media(max-width: 425px){\n      width: 100%;\n  }\n`;\n\nconst ParagraphInput = styled.p`\n    align-self: flex-start;\n    text-transform: uppercase;\n    color: #85144b;\n    font-size: 0.8rem;\n    margin: 1.5rem 1.3rem 1rem 1.3rem;\n    font-family: Overpass;\n    font-weight: bold;\n\n    @media (max-width: 425px) {\n      font-size: 0.7rem;\n      text-align: left;\n      margin-left: 0.2rem;\n    }\n`;\n\nconst Error = styled.h6`\n  font-size: 0.6rem;\n  color: #f00;\n  align-self: flex-start;\n  font-weight: normal;\n  margin-left: 1.4rem;\n\n  @media (max-width: 425px) {\n    margin: 0;\n  }\n`;\n\nconst ErrorEmpty = styled.h6`\n  font-size: 0.7rem;\n  color: #F00;\n  align-self: flex-start;\n  font-weight: normal;\n  margin-left: 2.5rem;\n`;\nconst ImagePassword = styled.img`\n  position: absolute;\n  bottom: 1.2rem;\n  right: 0.5rem;\n  cursor: pointer;\n`;\nconst TextTerms = styled.p`\n  font-size: 0.8rem;\n  margin: 1.25rem ;\n  margin-bottom: 1.5rem;\n  color: #505050;\n  font-family: Overpass, Regular;\n  text-align: center;\n\n  strong {\n    color: #85144b;\n    font-size: 0.7rem;\n    cursor: pointer;\n    text-decoration: underline;\n    margin: 0 0.2rem;\n    font-family: Overpass, Regular;\n  }\n\n  @media(max-width: 648px){\n    font-size: 0.6rem;\n  }\n`;\n\n\nclass FisicalPersonForm extends Component {\n  state = {\n    togglePassword: false,\n    modalSucess: false,\n    user: {\n      name: '',\n      surname: '',\n      rg: '',\n      sendingBody: '',\n      uf: '',\n      birth: '',\n      cpf: '',\n      email: '',\n      telephone: '',\n      password: '',\n    },\n    isErrorRg: false,\n    isErrorPassword: false,\n    isErrorCpf: false,\n    isEmpty: false,\n    dataUser: [],\n  };\n\n  togglePassword = (ev) => {\n    ev.preventDefault();\n    this.setState({\n      togglePassword: !this.state.togglePassword,\n    });\n  };\n\n  togglePassword = (ev) => {\n    ev.preventDefault();\n    this.setState({\n      togglePassword: !this.state.togglePassword,\n    });\n  };\n\n  handleModalSucess = () => {\n    this.setState({\n      modalSucess: !this.state.modalSucess,\n    });\n  };\n\n  handleChange = (field, ev) => {\n    const { user } = this.state;\n    user[field] = ev.target.value;\n    this.setState({ user });\n  };\n\n  handleSubmit = (ev) => {\n    ev.preventDefault();\n    const { user } = this.state;\n    const { rg, cpf, password } = this.state.user;\n    if (rg.length < 9 || cpf.length < 11 || password.length < 4) {\n      this.errors();\n      this.setState({\n        isErrorCpf: true,\n        isErrorPassword: true,\n        isErrorRg: true,\n      });\n    } else if (rg.length == 9 && cpf.length == 11 && password.length > 4) {\n      this.setState({\n        isErrorRg: false,\n        isErrorPassword: false,\n        isErrorCpf: false,\n      });\n      this.props.addNewUser(user);\n      this.handleModalSucess();\n    }\n  };\n\n  errors = () => {\n    const { user } = this.state;\n    const {\n      name,\n      surname,\n      rg,\n      sendingBody,\n      uf,\n      birth,\n      cpf,\n      email,\n      telephone,\n      password,\n    } = this.state.user;\n\n    if (\n      name,\n      surname,\n      rg,\n      sendingBody,\n      uf,\n      birth,\n      cpf,\n      email,\n      telephone,\n      password === ''\n    ) {\n      this.setState({\n        isEmpty: true,\n      });\n    } else {\n      this.setState({ isEmpty: false });\n    }\n  };\n\n  render() {\n    const errorMessage = [\n      'RG inválido',\n      'Senha fraca',\n      'CPF inválido',\n      'Preencha todos os campos',\n      'E-mail inválido',\n      'Uf inválida',\n      'Orgão expedidor inválido',\n    ];\n\n    const {\n      isErrorPassword,\n      isErrorRg,\n      isErrorCpf,\n      modalSucess,\n      isEmpty,\n      isErrorOrgao,\n      isErrorUf,\n      isErrorEmail,\n    } = this.state;\n\n    return (\n      <>\n        {modalSucess === true ? (\n          <Container>\n            <FisicalPersonSucess handleModalSucess={this.handleModalSucess} />\n          </Container>\n        ) : (\n            <Container>\n              <Form onSubmit={this.handleSubmit} withError={isEmpty, isErrorEmail, isErrorRg, isErrorCpf, isErrorOrgao, isErrorUf, isErrorPassword}>\n                <ImageLogo />\n                <TitleForm>cadastrar pessoa física</TitleForm>\n                <Label>\n                  <ParagraphInput>Nome</ParagraphInput>\n                  <Input\n                    type=\"text\"\n                    onChange={ev => this.handleChange('name', ev)}\n                    value={this.state.name}\n                    placeholder=\"Nome\"\n                    name=\"nome\"\n                  />\n                </Label>\n                <Label>\n                  <ParagraphInput>Sobrenome</ParagraphInput>\n                  <Input\n                    type=\"text\"\n                    onChange={ev => this.handleChange('surname', ev)}\n                    value={this.state.surname}\n                    placeholder=\"Sobrenome\"\n                    name=\"sobrenome\"\n                  />\n                </Label>\n                <Label>\n                  <ParagraphInput>cpf</ParagraphInput>\n                  <Input\n                    type=\"number\"\n                    onChange={ev => this.handleChange('cpf', ev)}\n                    value={this.state.cpf}\n                    placeholder=\"000000-0\"\n                    name=\"cpf\"\n                    min=\"0\"\n                  />\n                  {isErrorCpf && <Error>{errorMessage[2]}</Error>}\n                </Label>\n                <Label>\n                  <ParagraphInput>email</ParagraphInput>\n                  <Input\n                    type=\"email\"\n                    onChange={ev => this.handleChange('email', ev)}\n                    value={this.state.email}\n                    name=\"email\"\n                    placeholder=\"nome@mail.com\"\n                    require\n                  />\n                </Label>\n                <Label>\n                  <ParagraphInput>telefone</ParagraphInput>\n                  <Input\n                    type=\"tel\"\n                    onChange={ev => this.handleChange('telephone', ev)}\n                    value={this.state.telephone}\n                    placeholder=\"(00) 00000-0000\"\n                    name=\"telefone\"\n                  />\n                </Label>\n                <Label>\n                  <ParagraphInput>senha</ParagraphInput>\n                  <Input\n                    className=\"input-password\"\n                    type={\n                      this.state.togglePassword === true ? 'text' : 'password'\n                    }\n                    onChange={ev => this.handleChange('password', ev)}\n                    value={this.state.password}\n                    placeholder=\"Inserir senha\"\n                    name=\"password\"\n                  />\n                  {this.state.togglePassword === true ? (\n                    <BlockSmallerInput>\n                      <ImagePassword\n                        src={VisibilityOn}\n                        onClick={this.togglePassword}\n                      />\n                    </BlockSmallerInput>\n                  ) : (\n                      <BlockSmallerInput>\n                        <ImagePassword\n                          src={VisibilityOff}\n                          onClick={this.togglePassword}\n                        />\n                      </BlockSmallerInput>\n                    )}\n                  {isErrorPassword && <Error>{errorMessage[1]}</Error>}\n                </Label>\n                <TextTerms>\n                  Clique abaixo para concordar com os\n                <strong onClick={() => this.props.handleModalTerms()}>\n                    Termos de Serviço\n                </strong>\n                  e registrar.\n              </TextTerms>\n              {isEmpty && <ErrorEmpty>{errorMessage[3]}</ErrorEmpty>}                \n                <Button\n                  text=\"concordar e criar conta\"\n                  type=\"submit\"\n                  onClick={this.handleSubmit}\n                />\n              </Form>\n            </Container>\n          )}\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FisicalPersonForm);\n"]},"metadata":{},"sourceType":"module"}