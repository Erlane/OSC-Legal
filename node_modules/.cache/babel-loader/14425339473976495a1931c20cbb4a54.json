{"ast":null,"code":"var _jsxFileName = \"/home/evainaweb-06/Documentos/gabriel/OSC-Legal/src/screens/onboarding/CreateFisicalPerson/FisicalPersonForm.js\";\n\n/* eslint-disable class-methods-use-this */\n\n/* eslint-disable indent */\n\n/* eslint-disable no-mixed-spaces-and-tabs */\n\n/* eslint-disable no-dupe-class-members */\n// Libs\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components'; // Components\n\nimport Button from '../../../components/Button';\nimport Input from '../../../components/Input';\nimport ImageLogo from '../../../components/ImageLogo';\nimport FisicalPersonSucess from './FisicalPersonSucess';\nimport { Container } from './CreateFisicalPersonScreen'; // Images\n\nimport VisibilityOff from \"../../../assets/visibility-off.svg\";\nimport VisibilityOn from \"../../../assets/visibility-on.svg\"; // Redux\n\nimport { addNewUser } from '../../../dataflow/modules/sign-up-modules';\nimport { createUser } from '../../../api';\n\nconst mapStateToProps = state => ({\n  signup: state.signup\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addNewUser: user => {\n    dispatch(addNewUser(user));\n  }\n});\n\nexport const Form = styled.form`\n  min-width: 35%;\n  min-height: 100vh;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n  border-radius: 3px;\n  box-shadow: 0 1px 2px #00000029;\n\n  input {\n    border: ${props => props.withError === true ? \"1px solid #f00\" : \"1px solid #ffcfcd;\"};\n  }\n\n  @media (max-width: 500px) {\n    padding: 0 2rem;\n  }\n\n  h1 {\n    font-size: 1.3rem;\n    font-family: \"Overpass\", ExtraBold;\n    text-transform: uppercase;\n    margin: 2rem 0 1.5rem 2.5rem;\n    align-self: flex-start;\n  }\n  @media (max-width: 425px) {\n    h1 {\n      margin: 2rem 0;\n      font-size: 1.3rem;\n    }\n  }\n\n  @media (max-width: 375px) {\n    padding: 1rem;\n  }\n\n  span {\n    width: 90%;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n  }\n  @media (max-width: 425px) {\n    span {\n      width: 100%;\n      flex-direction: column;\n    }\n    p {\n      text-align: center;\n    }\n  }\n`;\nexport const Label = styled.label`\n  position: relative;\n  width: 90%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n  p {\n    align-self: flex-start;\n    text-transform: uppercase;\n    color: #85144b;\n    font-size: 0.7rem;\n    margin: 1.5rem 1.3rem 1rem 1.3rem;\n    font-family: Overpass, Bold;\n    font-weight: bold;\n  }\n\n  @media (max-width: 425px) {\n    p {\n      text-align: left;\n      margin-left: 0.2rem;\n    }\n  }\n`;\nexport const Error = styled.h6`\n  font-size: 0.6rem;\n  color: red;\n  align-self: flex-start;\n  font-weight: normal;\n  margin-left: 1.4rem;\n\n  @media (max-width: 425px) {\n    margin: 0;\n  }\n`;\nexport const InputForm = styled.input`\n  width: 90%;\n  height: 40px;\n  border: 1px solid #ffcfcd;\n  background: #fafafa;\n  padding: 0.5rem;\n  font-size: 0.9rem;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n`;\nexport const ImagePassword = styled.img`\n  position: absolute;\n  bottom: 2.5vh;\n  right: 0.7rem;\n  cursor: pointer;\n`;\nexport const TextTerms = styled.p`\n  font-size: 0.6rem;\n  margin: 1rem 0;\n  color: #505050;\n  font-family: Overpass, Regular;\n  text-align: center;\n\n  strong {\n    color: #85144b;\n    font-size: 0.7rem;\n    cursor: pointer;\n    text-decoration: underline;\n    margin: 0 0.2rem;\n    font-family: Overpass, Regular;\n  }\n`;\n\nclass FisicalPersonForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      togglePassword: false,\n      modalSucess: false,\n      user: {\n        name: '',\n        surname: '',\n        rg: '',\n        sendingBody: '',\n        uf: '',\n        birth: '',\n        cpf: '',\n        email: '',\n        telephone: '',\n        password: ''\n      },\n      isErrorRg: false,\n      isErrorPassword: false,\n      isErrorCpf: false,\n      isEmpty: false,\n      isErrorEmail: false,\n      isErrorOrgao: false,\n      isErrorUf: false,\n      dataUser: []\n    };\n\n    this.togglePassword = ev => {\n      ev.preventDefault();\n      this.setState({\n        togglePassword: !this.state.togglePassword\n      });\n    };\n\n    this.togglePassword = ev => {\n      ev.preventDefault();\n      this.setState({\n        togglePassword: !this.state.togglePassword\n      });\n    };\n\n    this.handleModalSucess = () => {\n      this.setState({\n        modalSucess: !this.state.modalSucess\n      });\n    };\n\n    this.handleChange = (field, ev) => {\n      const {\n        user\n      } = this.state;\n      user[field] = ev.target.value;\n      this.setState({\n        user\n      });\n    };\n\n    this.handleSubmit = ev => {\n      ev.preventDefault();\n      this.errors(); // this.props.addNewUser(this.state.user);\n      // this.handleModalSucess();\n    };\n\n    this.errors = () => {\n      const {\n        user\n      } = this.state;\n      const {\n        name,\n        surname,\n        rg,\n        sendingBody,\n        uf,\n        birth,\n        cpf,\n        email,\n        telephone,\n        password\n      } = this.state.user;\n\n      if (email !== this.state.email2) {\n        this.setState({\n          isErrorEmail: true\n        });\n      } else if (rg !== this.state.rg2) {\n        this.setState({\n          isErrorRg: true\n        });\n      } else if (cpf !== this.state.cpf2) {\n        this.setState({\n          isErrorCpf: true\n        });\n      } else if (name, surname, rg, sendingBody, uf, birth, cpf, email, telephone, password === '') {\n        this.setState({\n          isEmpty: true,\n          isErrorCpf: false,\n          isErrorRg: false,\n          isErrorEmail: false\n        });\n      } else {\n        this.setState({\n          isEmpty: false,\n          isErrorCpf: false,\n          isErrorEmail: false\n        });\n        this.props.addNewUser(user);\n        this.handleModalSucess();\n        this.register(user);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async getData() {\n    const {\n      user\n    } = this.state;\n\n    try {\n      const userrr = await createUser(user);\n      this.setState({\n        dataUser: userrr.data\n      });\n      const response = this.state.dataUser;\n\n      if (!response) {\n        return console.log('errrr');\n      }\n    } catch (err) {\n      console.log('erro', err);\n    }\n  }\n\n  async register(user) {\n    try {\n      const createdUser = await createUser(user);\n    } catch (err) {\n      console.log('err', err);\n    }\n  }\n\n  render() {\n    const errorMessage = [\"RG inválido\", \"Senha fraca\", \"CPF inválido\", \"Preencha todos os valores\", \"E-mail inválido\", \"Uf inválida\", \"Orgão expedidor inválido\"];\n    const {\n      isErrorPassword,\n      isErrorRg,\n      isErrorCpf,\n      modalSucess,\n      isEmpty,\n      isErrorOrgao,\n      isErrorUf,\n      isErrorEmail\n    } = this.state;\n    return React.createElement(React.Fragment, null, modalSucess === true ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(FisicalPersonSucess, {\n      handleModalSucess: this.handleModalSucess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })) : React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      withError: (isEmpty, isErrorEmail, isErrorRg, isErrorCpf, isErrorOrgao, isErrorUf, isErrorPassword),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(ImageLogo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"cadastrar pessoa f\\xEDsica\"), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Nome\"), React.createElement(Input, {\n      type: \"text\",\n      onChange: ev => this.handleChange(\"nome\", ev),\n      value: this.state.nome,\n      placeholder: \"Nome\",\n      name: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"Sobrenome\"), React.createElement(Input, {\n      type: \"text\",\n      onChange: ev => this.handleChange(\"sobrenome\", ev),\n      value: this.state.sobrenome,\n      placeholder: \"Sobrenome\",\n      name: \"sobrenome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"rg\"), React.createElement(InputForm, {\n      type: \"number\",\n      onChange: ev => this.handleChange(\"rg\", ev),\n      value: this.state.rg,\n      placeholder: \"000000-0\",\n      name: \"rg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, errorMessage[3]), isErrorRg && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, errorMessage[0])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, \"Org\\xE3o expedidor\"), React.createElement(InputForm, {\n      type: \"text\",\n      onChange: ev => this.handleChange(\"orgao\", ev),\n      value: this.state.orgao,\n      name: \"orgao\",\n      placeholder: \"Detran\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, errorMessage[3]))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"uf\"), React.createElement(InputForm, {\n      type: \"text\",\n      onChange: ev => this.handleChange(\"uf\", ev),\n      value: this.state.uf,\n      placeholder: \"RJ\",\n      name: \"uf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"data de nascimento\"), React.createElement(InputForm, {\n      type: \"number\",\n      onChange: ev => this.handleChange(\"nascimento\", ev),\n      value: this.state.nascimento,\n      placeholder: \"02/01/2020\",\n      name: \"nascimento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, errorMessage[3]))), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"cpf\"), React.createElement(Input, {\n      type: \"number\",\n      onChange: ev => this.handleChange(\"cpf\", ev),\n      value: this.state.cpf,\n      placeholder: \"000000-0\",\n      name: \"cpf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, errorMessage[3]), isErrorCpf && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, errorMessage[2])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"email\"), React.createElement(Input, {\n      type: \"email\",\n      onChange: ev => this.handleChange(\"email\", ev),\n      value: this.state.email,\n      name: \"email\",\n      placeholder: \"nome@mail.com\",\n      require: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }), isErrorEmail && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, errorMessage[4]), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \"telefone\"), React.createElement(Input, {\n      type: \"tel\",\n      onChange: ev => this.handleChange(\"telefone\", ev),\n      value: this.state.telefone,\n      placeholder: \"(00) 00000-0000\",\n      name: \"telefone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, \"senha\"), React.createElement(Input, {\n      className: \"input-password\",\n      type: this.state.togglePassword === true ? \"text\" : \"password\",\n      onChange: ev => this.handleChange(\"senha\", ev),\n      value: this.state.senha,\n      placeholder: \"Inserir senha\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }), this.state.togglePassword === true ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, React.createElement(ImagePassword, {\n      src: VisibilityOn,\n      onClick: this.togglePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    })) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, React.createElement(ImagePassword, {\n      src: VisibilityOff,\n      onClick: this.togglePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    })), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(TextTerms, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, \"Clique abaixo para concordar com os\", React.createElement(\"strong\", {\n      onClick: () => this.props.handleModalTerms(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, \"Termos de Servi\\xE7o\"), \"e registrar.\"), React.createElement(Button, {\n      text: \"concordar e criar conta\",\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FisicalPersonForm);","map":{"version":3,"sources":["/home/evainaweb-06/Documentos/gabriel/OSC-Legal/src/screens/onboarding/CreateFisicalPerson/FisicalPersonForm.js"],"names":["React","Component","connect","styled","Button","Input","ImageLogo","FisicalPersonSucess","Container","addNewUser","createUser","mapStateToProps","state","signup","mapDispatchToProps","dispatch","user","Form","form","props","withError","Label","label","Error","h6","InputForm","input","ImagePassword","img","TextTerms","p","FisicalPersonForm","togglePassword","modalSucess","name","surname","rg","sendingBody","uf","birth","cpf","email","telephone","password","isErrorRg","isErrorPassword","isErrorCpf","isEmpty","isErrorEmail","isErrorOrgao","isErrorUf","dataUser","ev","preventDefault","setState","handleModalSucess","handleChange","field","target","value","handleSubmit","errors","email2","rg2","cpf2","register","componentDidMount","getData","userrr","data","response","console","log","err","createdUser","render","errorMessage","nome","sobrenome","orgao","nascimento","telefone","senha","VisibilityOn","VisibilityOff","handleModalTerms"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable indent */\n/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable no-dupe-class-members */\n\n// Libs\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\n// Components\nimport Button from '../../../components/Button';\nimport Input from '../../../components/Input';\nimport ImageLogo from '../../../components/ImageLogo';\nimport FisicalPersonSucess from './FisicalPersonSucess';\nimport { Container } from './CreateFisicalPersonScreen';\n\n// Images\nimport VisibilityOff from '../../../assets/visibility-off.svg';\nimport VisibilityOn from '../../../assets/visibility-on.svg';\n\n// Redux\nimport { addNewUser } from '../../../dataflow/modules/sign-up-modules';\n\nimport { createUser } from '../../../api';\n\nconst mapStateToProps = state => ({\n  signup: state.signup\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addNewUser: user => {\n    dispatch(addNewUser(user));\n  }\n});\n\nexport const Form = styled.form`\n  min-width: 35%;\n  min-height: 100vh;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n  border-radius: 3px;\n  box-shadow: 0 1px 2px #00000029;\n\n  input {\n    border: ${props =>\n    props.withError === true ? \"1px solid #f00\" : \"1px solid #ffcfcd;\"};\n  }\n\n  @media (max-width: 500px) {\n    padding: 0 2rem;\n  }\n\n  h1 {\n    font-size: 1.3rem;\n    font-family: \"Overpass\", ExtraBold;\n    text-transform: uppercase;\n    margin: 2rem 0 1.5rem 2.5rem;\n    align-self: flex-start;\n  }\n  @media (max-width: 425px) {\n    h1 {\n      margin: 2rem 0;\n      font-size: 1.3rem;\n    }\n  }\n\n  @media (max-width: 375px) {\n    padding: 1rem;\n  }\n\n  span {\n    width: 90%;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n  }\n  @media (max-width: 425px) {\n    span {\n      width: 100%;\n      flex-direction: column;\n    }\n    p {\n      text-align: center;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  width: 90%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n  p {\n    align-self: flex-start;\n    text-transform: uppercase;\n    color: #85144b;\n    font-size: 0.7rem;\n    margin: 1.5rem 1.3rem 1rem 1.3rem;\n    font-family: Overpass, Bold;\n    font-weight: bold;\n  }\n\n  @media (max-width: 425px) {\n    p {\n      text-align: left;\n      margin-left: 0.2rem;\n    }\n  }\n`;\n\nexport const Error = styled.h6`\n  font-size: 0.6rem;\n  color: red;\n  align-self: flex-start;\n  font-weight: normal;\n  margin-left: 1.4rem;\n\n  @media (max-width: 425px) {\n    margin: 0;\n  }\n`;\nexport const InputForm = styled.input`\n  width: 90%;\n  height: 40px;\n  border: 1px solid #ffcfcd;\n  background: #fafafa;\n  padding: 0.5rem;\n  font-size: 0.9rem;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n`;\n\nexport const ImagePassword = styled.img`\n  position: absolute;\n  bottom: 2.5vh;\n  right: 0.7rem;\n  cursor: pointer;\n`;\nexport const TextTerms = styled.p`\n  font-size: 0.6rem;\n  margin: 1rem 0;\n  color: #505050;\n  font-family: Overpass, Regular;\n  text-align: center;\n\n  strong {\n    color: #85144b;\n    font-size: 0.7rem;\n    cursor: pointer;\n    text-decoration: underline;\n    margin: 0 0.2rem;\n    font-family: Overpass, Regular;\n  }\n`;\n\nclass FisicalPersonForm extends Component {\n  state = {\n    togglePassword: false,\n    modalSucess: false,\n    user: {\n      name: '',\n      surname: '',\n      rg: '',\n      sendingBody: '',\n      uf: '',\n      birth: '',\n      cpf: '',\n      email: '',\n      telephone: '',\n      password: ''\n    },\n\n    isErrorRg: false,\n    isErrorPassword: false,\n    isErrorCpf: false,\n    isEmpty: false,\n    isErrorEmail: false,\n    isErrorOrgao: false,\n    isErrorUf: false,\n    dataUser: []\n  };\n\n  togglePassword = ev => {\n    ev.preventDefault();\n    this.setState({\n      togglePassword: !this.state.togglePassword\n    });\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async getData() {\n    const { user } = this.state;\n\n    try {\n      const userrr = await createUser(user);\n      this.setState({ dataUser: userrr.data });\n\n      const response = this.state.dataUser;\n\n      if (!response) {\n        return console.log('errrr');\n      }\n    } catch (err) {\n      console.log('erro', err);\n    }\n  }\n\n  async register(user) {\n    try {\n      const createdUser = await createUser(user);\n\n    } catch (err) {\n      console.log('err', err);\n    }\n  }\n\n  togglePassword = (ev) => {\n    ev.preventDefault();\n    this.setState({\n      togglePassword: !this.state.togglePassword,\n    });\n  };\n\n  handleModalSucess = () => {\n    this.setState({\n      modalSucess: !this.state.modalSucess\n    });\n  };\n\n  handleChange = (field, ev) => {\n    const { user } = this.state;\n    user[field] = ev.target.value;\n    this.setState({ user });\n  };\n\n  handleSubmit = ev => {\n    ev.preventDefault();\n    this.errors();\n    // this.props.addNewUser(this.state.user);\n    // this.handleModalSucess();\n  };\n\n  errors = () => {\n    const { user } = this.state;\n    const {\n      name,\n      surname,\n      rg,\n      sendingBody,\n      uf,\n      birth,\n      cpf,\n      email,\n      telephone,\n      password\n    } = this.state.user;\n\n    if (email !== this.state.email2) {\n      this.setState({ isErrorEmail: true })\n    } else if (rg !== this.state.rg2) {\n      this.setState({ isErrorRg: true })\n    } else if (cpf !== this.state.cpf2) {\n      this.setState({ isErrorCpf: true })\n    } else if (\n      name,\n      surname,\n      rg,\n      sendingBody,\n      uf,\n      birth,\n      cpf,\n      email,\n      telephone,\n      password === ''\n    ) {\n      this.setState({\n        isEmpty: true,\n        isErrorCpf: false,\n        isErrorRg: false,\n        isErrorEmail: false,\n      })\n    } else {\n      this.setState({\n        isEmpty: false,\n        isErrorCpf: false,\n        isErrorEmail: false,\n      })\n      this.props.addNewUser(user);\n      this.handleModalSucess();\n      this.register(user);\n    }\n  };\n\n  render() {\n    const errorMessage = [\n      \"RG inválido\",\n      \"Senha fraca\",\n      \"CPF inválido\",\n      \"Preencha todos os valores\",\n      \"E-mail inválido\",\n      \"Uf inválida\",\n      \"Orgão expedidor inválido\"\n    ];\n\n    const {\n      isErrorPassword,\n      isErrorRg,\n      isErrorCpf,\n      modalSucess,\n      isEmpty,\n      isErrorOrgao,\n      isErrorUf,\n      isErrorEmail\n    } = this.state;\n\n    return (\n      <>\n        {modalSucess === true ? (\n          <Container>\n            <FisicalPersonSucess handleModalSucess={this.handleModalSucess} />\n          </Container>\n        ) : (\n            <Container>\n              <Form onSubmit={this.handleSubmit} withError={isEmpty, isErrorEmail, isErrorRg, isErrorCpf, isErrorOrgao, isErrorUf, isErrorPassword}>\n                <ImageLogo />\n                <h1>cadastrar pessoa física</h1>\n                <Label>\n                  <p>Nome</p>\n                  <Input\n                    type=\"text\"\n                    onChange={ev => this.handleChange(\"nome\", ev)}\n                    value={this.state.nome}\n                    placeholder=\"Nome\"\n                    name=\"nome\"\n                  />\n                  {isEmpty && <Error>{errorMessage[3]}</Error>}\n                </Label>\n                <Label>\n                  <p>Sobrenome</p>\n                  <Input\n                    type=\"text\"\n                    onChange={ev => this.handleChange(\"sobrenome\", ev)}\n                    value={this.state.sobrenome}\n                    placeholder=\"Sobrenome\"\n                    name=\"sobrenome\"\n                  />\n                  {isEmpty && <Error>{errorMessage[3]}</Error>}\n                </Label>\n                <span>\n                  <Label>\n                    <p>rg</p>\n                    <InputForm\n                      type=\"number\"\n                      onChange={ev => this.handleChange(\"rg\", ev)}\n                      value={this.state.rg}\n                      placeholder=\"000000-0\"\n                      name=\"rg\"\n                    />\n                    {isEmpty && <Error>{errorMessage[3]}</Error>}\n                    {isErrorRg && <Error>{errorMessage[0]}</Error>}\n                  </Label>\n                  <Label>\n                    <p>Orgão expedidor</p>\n                    <InputForm\n                      type=\"text\"\n                      onChange={ev => this.handleChange(\"orgao\", ev)}\n                      value={this.state.orgao}\n                      name=\"orgao\"\n                      placeholder=\"Detran\"\n                    />\n                    {isEmpty && <Error>{errorMessage[3]}</Error>}\n                  </Label>\n                </span>\n                <span>\n                  <Label>\n                    <p>uf</p>\n                    <InputForm\n                      type=\"text\"\n                      onChange={ev => this.handleChange(\"uf\", ev)}\n                      value={this.state.uf}\n                      placeholder=\"RJ\"\n                      name=\"uf\"\n                    />\n                    {isEmpty && <Error>{errorMessage[3]}</Error>}\n                  </Label>\n                  <Label>\n                    <p>data de nascimento</p>\n                    <InputForm\n                      type=\"number\"\n                      onChange={ev => this.handleChange(\"nascimento\", ev)}\n                      value={this.state.nascimento}\n                      placeholder=\"02/01/2020\"\n                      name=\"nascimento\"\n                    />\n                    {isEmpty && <Error>{errorMessage[3]}</Error>}\n                  </Label>\n                </span>\n                <Label>\n                  <p>cpf</p>\n                  <Input\n                    type=\"number\"\n                    onChange={ev => this.handleChange(\"cpf\", ev)}\n                    value={this.state.cpf}\n                    placeholder=\"000000-0\"\n                    name=\"cpf\"\n                  />\n                  {isEmpty && <Error>{errorMessage[3]}</Error>}\n                  {isErrorCpf && <Error>{errorMessage[2]}</Error>}\n                </Label>\n                <Label>\n                  <p>email</p>\n                  <Input\n                    type=\"email\"\n                    onChange={ev => this.handleChange(\"email\", ev)}\n                    value={this.state.email}\n                    name=\"email\"\n                    placeholder=\"nome@mail.com\"\n                    require\n                  />\n                  {isErrorEmail && <Error>{errorMessage[4]}</Error>}\n                  {isEmpty && <Error>{errorMessage[3]}</Error>}\n                </Label>\n                <Label>\n                  <p>telefone</p>\n                  <Input\n                    type=\"tel\"\n                    onChange={ev => this.handleChange(\"telefone\", ev)}\n                    value={this.state.telefone}\n                    placeholder=\"(00) 00000-0000\"\n                    name=\"telefone\"\n                  />\n                  {isEmpty && <Error>{errorMessage[3]}</Error>}\n                </Label>\n                <Label>\n                  <p>senha</p>\n                  <Input\n                    className=\"input-password\"\n                    type={\n                      this.state.togglePassword === true ? \"text\" : \"password\"\n                    }\n                    onChange={ev => this.handleChange(\"senha\", ev)}\n                    value={this.state.senha}\n                    placeholder=\"Inserir senha\"\n                    name=\"password\"\n                  />\n                  {this.state.togglePassword === true ? (\n                    <span>\n                      <ImagePassword\n                        src={VisibilityOn}\n                        onClick={this.togglePassword}\n                      />\n                    </span>\n                  ) : (\n                      <span>\n                        <ImagePassword\n                          src={VisibilityOff}\n                          onClick={this.togglePassword}\n                        />\n                      </span>\n                    )}\n                  {isEmpty && <Error>{errorMessage[3]}</Error>}\n                </Label>\n                <TextTerms>\n                  Clique abaixo para concordar com os\n                <strong onClick={() => this.props.handleModalTerms()}>\n                    Termos de Serviço\n                </strong>\n                  e registrar.\n              </TextTerms>\n                <Button\n                  text=\"concordar e criar conta\"\n                  type=\"submit\"\n                  onClick={this.handleSubmit}\n                />\n              </Form>\n            </Container>\n          )}\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FisicalPersonForm);\n"]},"metadata":{},"sourceType":"module"}