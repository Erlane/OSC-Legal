{"ast":null,"code":"var _jsxFileName = \"/home/evainaweb-06/Documentos/gabriel/OSC-Legal/src/screens/login/createFisicalPerson/FisicalPersonForm.js\";\n\n/* eslint-disable no-mixed-spaces-and-tabs */\n// Libs\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\"; // Components\n\nimport Button from \"../../../components/Button\";\nimport Input from \"../../../components/Input\";\nimport ImageLogo from \"../../../components/ImageLogo\";\nimport FisicalPersonSucess from \"./FisicalPersonSucess\";\nimport FisicalPersonTerms from \"./FisicalPersonTerms\";\nimport { Container } from \"./CreateFisicalPersonScreen\"; // Images\n\nimport VisibilityOff from \"../../../assets/visibility-off.svg\";\nimport VisibilityOn from \"../../../assets/visibility-on.svg\"; // Redux\n\nimport { addNewUser } from \"../../../dataflow/modules/sign-up-modules\";\nimport ModalTerms from \"./FisicalPersonTerms\";\n\nconst mapStateToProps = state => ({\n  signup: state.signup\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addNewUser: user => {\n    dispatch(addNewUser(user));\n  }\n});\n\nexport const Form = styled.form`\n  min-width: 35%;\n  min-height: 100vh;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n\n  @media (max-width: 500px) {\n    padding: 0 2rem;\n  }\n\n  h1 {\n    font-size: 1.4rem;\n    font-family: \"Overpass\", ExtraBold;\n    text-transform: uppercase;\n    margin: 2rem 0 1.5rem 2.5rem;\n    align-self: flex-start;\n  }\n  @media (max-width: 425px) {\n    h1 {\n      margin: 2rem 0;\n      font-size: 1.3rem;\n    }\n  }\n\n  @media (max-width: 375px) {\n    padding: 1rem;\n  }\n\n  span {\n    width: 90%;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n  }\n  @media (max-width: 425px) {\n    span {\n      width: 100%;\n      flex-direction: column;\n    }\n    p {\n      text-align: center;\n    }\n  }\n`;\nexport const Label = styled.label`\n  position: relative;\n  width: 90%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n  p {\n    align-self: flex-start;\n    text-transform: uppercase;\n    color: #85144b;\n    font-size: 0.7rem;\n    margin: 1rem 1.3rem;\n    font-family: Overpass, Bold;\n    font-weight: bold;\n  }\n\n  @media (max-width: 425px) {\n    p {\n      text-align: left;\n      margin-left: 0.2rem;\n    }\n  }\n`;\nexport const Error = styled.h6`\n  font-size: 0.6rem;\n  color: red;\n  align-self: flex-start;\n  font-weight: normal;\n  margin-left: 1.4rem;\n\n  @media (max-width: 425px) {\n    margin: 0;\n  }\n`;\nexport const InputForm = styled.input`\n  width: 90%;\n  height: 40px;\n  border: 1px solid #ffcfcd;\n  background: #fafafa;\n  padding: 0.5rem;\n  font-size: 0.9rem;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n`;\nexport const ImagePassword = styled.img`\n  position: absolute;\n  bottom: 1.5vh;\n  right: 0.7rem;\n  cursor: pointer;\n`;\nexport const TextTerms = styled.p`\n  font-size: 0.6rem;\n  margin: 1rem 0;\n  color: #505050;\n  font-family: Overpass, Regular;\n  text-align: center;\n\n  strong {\n    color: #85144b;\n    font-size: 0.7rem;\n    cursor: pointer;\n    text-decoration: underline;\n    margin: 0 0.2rem;\n    font-family: Overpass, Regular;\n  }\n`;\n\nclass FisicalPersonForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      togglePassword: false,\n      modalSucess: true,\n      user: {\n        nome: \"\",\n        sobrenome: \"\",\n        rg: \"\",\n        orgao: \"\",\n        uf: \"\",\n        nascimento: \"\",\n        cpf: \"\",\n        email: \"\",\n        telefone: \"\",\n        senha: \"\"\n      },\n      isErrorRg: false,\n      isErrorPassword: false,\n      isErrorCpf: false,\n      isEmpty: false,\n      modalTerms: false\n    };\n\n    this.togglePassword = ev => {\n      ev.preventDefault();\n      this.setState({\n        togglePassword: !this.state.togglePassword\n      });\n    };\n\n    this.handleModalSucess = () => {\n      this.setState({\n        modalSucess: !this.state.modalSucess\n      });\n    };\n\n    this.handleModalTerms = () => {\n      this.setState({\n        modalTerms: !this.state.modalTerms\n      });\n    };\n\n    this.handleChange = (field, ev) => {\n      const {\n        user\n      } = this.state;\n      user[field] = ev.target.value;\n      this.setState({\n        user\n      });\n    };\n\n    this.handleSubmit = ev => {\n      ev.preventDefault(); // this.errors();\n    };\n\n    this.errors = () => {\n      const {\n        user\n      } = this.state;\n      const {\n        nome,\n        sobrenome,\n        rg,\n        orgao,\n        uf,\n        nascimento,\n        cpf,\n        email,\n        telefone,\n        senha\n      } = this.state.user;\n\n      if (senha.length < 4) {\n        this.setState({\n          isErrorPassword: true\n        });\n      } else {\n        this.setState({\n          isErrorPassword: false\n        });\n      }\n\n      if (rg.length < 9 || rg.length > 9) {\n        this.setState({\n          isErrorRg: true\n        });\n      } else {\n        this.setState({\n          isErrorRg: false\n        });\n      }\n\n      if (cpf.length < 11 || cpf.length > 11) {\n        this.setState({\n          isErrorCpf: true\n        });\n      } else {\n        this.setState({\n          isErrorCpf: false\n        });\n      }\n\n      if (nome === \"\" || sobrenome === \"\" || rg === \"\" || orgao === \"\" || uf === \"\" || nascimento === \"\" || cpf === \"\" || email === \"\" || telefone === \"\" || senha === \"\") {\n        this.setState({\n          isEmpty: true\n        });\n      } else {\n        this.setState({\n          isEmpty: false\n        });\n        this.props.addNewUser(user);\n        this.handleModalSucess();\n      }\n    };\n  }\n\n  render() {\n    const errorMessage = [\"RG inválido\", \"Senha fraca\", \"CPF inválido\", \"Preencha todos os valores\"];\n    const {\n      isErrorPassword,\n      isErrorRg,\n      isErrorCpf,\n      modalSucess,\n      isEmpty\n    } = this.state;\n    return React.createElement(React.Fragment, null, modalSucess === true ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(FisicalPersonSucess, {\n      handleModalSucess: this.handleModalSucess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"erro\"), this.state.modalTerms === true ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(ModalTerms, {\n      handleModalTerms: this.handleModalTerms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    })) : React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(ImageLogo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"cadastrar pessoa f\\xEDsica\"), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Nome\"), React.createElement(Input, {\n      type: \"text\",\n      onChange: ev => this.handleChange(\"nome\", ev),\n      value: this.state.nome,\n      placeholder: \"Nome\",\n      name: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Sobrenome\"), React.createElement(Input, {\n      type: \"text\",\n      onChange: ev => this.handleChange(\"sobrenome\", ev),\n      value: this.state.sobrenome,\n      placeholder: \"Sobrenome\",\n      name: \"sobrenome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"rg\"), React.createElement(InputForm, {\n      type: \"number\",\n      onChange: ev => this.handleChange(\"rg\", ev),\n      value: this.state.rg,\n      placeholder: \"000000-0\",\n      name: \"rg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), isErrorRg && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, errorMessage[0])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Org\\xE3o expedidor\"), React.createElement(InputForm, {\n      type: \"text\",\n      onChange: ev => this.handleChange(\"orgao\", ev),\n      value: this.state.orgao,\n      name: \"orgao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, errorMessage[3]))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"uf\"), React.createElement(InputForm, {\n      type: \"text\",\n      onChange: ev => this.handleChange(\"uf\", ev),\n      value: this.state.uf,\n      name: \"uf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"data de nascimento\"), React.createElement(InputForm, {\n      type: \"number\",\n      onChange: ev => this.handleChange(\"nascimento\", ev),\n      value: this.state.nascimento,\n      placeholder: \"02/01/2020\",\n      name: \"nascimento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, errorMessage[3]))), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"cpf\"), React.createElement(Input, {\n      type: \"number\",\n      onChange: ev => this.handleChange(\"cpf\", ev),\n      value: this.state.cpf,\n      placeholder: \"000000-0\",\n      name: \"cpf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }), isErrorCpf && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, errorMessage[2])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"email\"), React.createElement(Input, {\n      type: \"email\",\n      onChange: ev => this.handleChange(\"email\", ev),\n      value: this.state.email,\n      name: \"email\",\n      placeholder: \"nome@mail.com\",\n      require: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"telefone\"), React.createElement(Input, {\n      type: \"tel\",\n      onChange: ev => this.handleChange(\"telefone\", ev),\n      value: this.state.telefone,\n      placeholder: \"(00) 00000-0000\",\n      name: \"telefone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }), isEmpty && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, errorMessage[3])), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, \"senha\"), React.createElement(Input, {\n      className: \"input-password\",\n      type: this.state.togglePassword === true ? \"text\" : \"password\",\n      onChange: ev => this.handleChange(\"senha\", ev),\n      value: this.state.senha,\n      placeholder: \"Inserir senha\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }), this.state.togglePassword === true ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(ImagePassword, {\n      src: VisibilityOn,\n      onClick: this.togglePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    })) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(ImagePassword, {\n      src: VisibilityOff,\n      onClick: this.togglePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    })), isErrorPassword && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, errorMessage[1])), React.createElement(TextTerms, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"Clique abaixo para concordar com os\", React.createElement(\"strong\", {\n      onClick: this.handleModalTerms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \"Termos de Servi\\xE7o\"), \"e registrar.\"), React.createElement(Button, {\n      text: \"concordar e criar conta\",\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FisicalPersonForm);","map":{"version":3,"sources":["/home/evainaweb-06/Documentos/gabriel/OSC-Legal/src/screens/login/createFisicalPerson/FisicalPersonForm.js"],"names":["React","Component","connect","styled","Button","Input","ImageLogo","FisicalPersonSucess","FisicalPersonTerms","Container","addNewUser","ModalTerms","mapStateToProps","state","signup","mapDispatchToProps","dispatch","user","Form","form","Label","label","Error","h6","InputForm","input","ImagePassword","img","TextTerms","p","FisicalPersonForm","togglePassword","modalSucess","nome","sobrenome","rg","orgao","uf","nascimento","cpf","email","telefone","senha","isErrorRg","isErrorPassword","isErrorCpf","isEmpty","modalTerms","ev","preventDefault","setState","handleModalSucess","handleModalTerms","handleChange","field","target","value","handleSubmit","errors","length","props","render","errorMessage","VisibilityOn","VisibilityOff"],"mappings":"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","sourcesContent":["/* eslint-disable no-mixed-spaces-and-tabs */\n// Libs\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\n// Components\nimport Button from \"../../../components/Button\";\nimport Input from \"../../../components/Input\";\nimport ImageLogo from \"../../../components/ImageLogo\";\nimport FisicalPersonSucess from \"./FisicalPersonSucess\";\nimport FisicalPersonTerms from \"./FisicalPersonTerms\";\nimport { Container } from \"./CreateFisicalPersonScreen\";\n\n// Images\nimport VisibilityOff from \"../../../assets/visibility-off.svg\";\nimport VisibilityOn from \"../../../assets/visibility-on.svg\";\n\n// Redux\nimport { addNewUser } from \"../../../dataflow/modules/sign-up-modules\";\nimport ModalTerms from \"./FisicalPersonTerms\";\n\nconst mapStateToProps = state => ({\n  signup: state.signup\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addNewUser: user => {\n    dispatch(addNewUser(user));\n  }\n});\n\nexport const Form = styled.form`\n  min-width: 35%;\n  min-height: 100vh;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n\n  @media (max-width: 500px) {\n    padding: 0 2rem;\n  }\n\n  h1 {\n    font-size: 1.4rem;\n    font-family: \"Overpass\", ExtraBold;\n    text-transform: uppercase;\n    margin: 2rem 0 1.5rem 2.5rem;\n    align-self: flex-start;\n  }\n  @media (max-width: 425px) {\n    h1 {\n      margin: 2rem 0;\n      font-size: 1.3rem;\n    }\n  }\n\n  @media (max-width: 375px) {\n    padding: 1rem;\n  }\n\n  span {\n    width: 90%;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n  }\n  @media (max-width: 425px) {\n    span {\n      width: 100%;\n      flex-direction: column;\n    }\n    p {\n      text-align: center;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  width: 90%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n  p {\n    align-self: flex-start;\n    text-transform: uppercase;\n    color: #85144b;\n    font-size: 0.7rem;\n    margin: 1rem 1.3rem;\n    font-family: Overpass, Bold;\n    font-weight: bold;\n  }\n\n  @media (max-width: 425px) {\n    p {\n      text-align: left;\n      margin-left: 0.2rem;\n    }\n  }\n`;\n\nexport const Error = styled.h6`\n  font-size: 0.6rem;\n  color: red;\n  align-self: flex-start;\n  font-weight: normal;\n  margin-left: 1.4rem;\n\n  @media (max-width: 425px) {\n    margin: 0;\n  }\n`;\nexport const InputForm = styled.input`\n  width: 90%;\n  height: 40px;\n  border: 1px solid #ffcfcd;\n  background: #fafafa;\n  padding: 0.5rem;\n  font-size: 0.9rem;\n\n  @media (max-width: 425px) {\n    width: 100%;\n  }\n`;\n\nexport const ImagePassword = styled.img`\n  position: absolute;\n  bottom: 1.5vh;\n  right: 0.7rem;\n  cursor: pointer;\n`;\nexport const TextTerms = styled.p`\n  font-size: 0.6rem;\n  margin: 1rem 0;\n  color: #505050;\n  font-family: Overpass, Regular;\n  text-align: center;\n\n  strong {\n    color: #85144b;\n    font-size: 0.7rem;\n    cursor: pointer;\n    text-decoration: underline;\n    margin: 0 0.2rem;\n    font-family: Overpass, Regular;\n  }\n`;\n\nclass FisicalPersonForm extends Component {\n  state = {\n    togglePassword: false,\n    modalSucess: true,\n    user: {\n      nome: \"\",\n      sobrenome: \"\",\n      rg: \"\",\n      orgao: \"\",\n      uf: \"\",\n      nascimento: \"\",\n      cpf: \"\",\n      email: \"\",\n      telefone: \"\",\n      senha: \"\"\n    },\n    isErrorRg: false,\n    isErrorPassword: false,\n    isErrorCpf: false,\n    isEmpty: false,\n    modalTerms: false\n  };\n\n  togglePassword = ev => {\n    ev.preventDefault();\n    this.setState({\n      togglePassword: !this.state.togglePassword\n    });\n  };\n\n  handleModalSucess = () => {\n    this.setState({\n      modalSucess: !this.state.modalSucess\n    });\n  };\n  handleModalTerms = () => {\n    this.setState({\n      modalTerms: !this.state.modalTerms\n    });\n  };\n\n  handleChange = (field, ev) => {\n    const { user } = this.state;\n    user[field] = ev.target.value;\n    this.setState({ user });\n  };\n\n  handleSubmit = ev => {\n    ev.preventDefault();\n    // this.errors();\n  };\n\n  errors = () => {\n    const { user } = this.state;\n    const {\n      nome,\n      sobrenome,\n      rg,\n      orgao,\n      uf,\n      nascimento,\n      cpf,\n      email,\n      telefone,\n      senha\n    } = this.state.user;\n\n    if (senha.length < 4) {\n      this.setState({ isErrorPassword: true });\n    } else {\n      this.setState({ isErrorPassword: false });\n    }\n    if (rg.length < 9 || rg.length > 9) {\n      this.setState({ isErrorRg: true });\n    } else {\n      this.setState({ isErrorRg: false });\n    }\n    if (cpf.length < 11 || cpf.length > 11) {\n      this.setState({ isErrorCpf: true });\n    } else {\n      this.setState({ isErrorCpf: false });\n    }\n    if (\n      nome === \"\" ||\n      sobrenome === \"\" ||\n      rg === \"\" ||\n      orgao === \"\" ||\n      uf === \"\" ||\n      nascimento === \"\" ||\n      cpf === \"\" ||\n      email === \"\" ||\n      telefone === \"\" ||\n      senha === \"\"\n    ) {\n      this.setState({ isEmpty: true });\n    } else {\n      this.setState({ isEmpty: false });\n      this.props.addNewUser(user);\n      this.handleModalSucess();\n    }\n  };\n\n  render() {\n    const errorMessage = [\n      \"RG inválido\",\n      \"Senha fraca\",\n      \"CPF inválido\",\n      \"Preencha todos os valores\"\n    ];\n\n    const {\n      isErrorPassword,\n      isErrorRg,\n      isErrorCpf,\n      modalSucess,\n      isEmpty\n    } = this.state;\n\n    return (\n      <>\n        {modalSucess === true ? (\n          <Container>\n            <FisicalPersonSucess handleModalSucess={this.handleModalSucess} />\n          </Container>\n        ) : (\n          <p>erro</p>\n        )}\n        {this.state.modalTerms === true ? (\n          <Container>\n            <ModalTerms handleModalTerms={this.handleModalTerms} />\n          </Container>\n        ) : (\n          <Container>\n            <Form onSubmit={this.handleSubmit}>\n              <ImageLogo />\n              <h1>cadastrar pessoa física</h1>\n              <Label>\n                <p>Nome</p>\n                <Input\n                  type=\"text\"\n                  onChange={ev => this.handleChange(\"nome\", ev)}\n                  value={this.state.nome}\n                  placeholder=\"Nome\"\n                  name=\"nome\"\n                />\n                {isEmpty && <Error>{errorMessage[3]}</Error>}\n              </Label>\n              <Label>\n                <p>Sobrenome</p>\n                <Input\n                  type=\"text\"\n                  onChange={ev => this.handleChange(\"sobrenome\", ev)}\n                  value={this.state.sobrenome}\n                  placeholder=\"Sobrenome\"\n                  name=\"sobrenome\"\n                />\n                {isEmpty && <Error>{errorMessage[3]}</Error>}\n              </Label>\n              <span>\n                <Label>\n                  <p>rg</p>\n                  <InputForm\n                    type=\"number\"\n                    onChange={ev => this.handleChange(\"rg\", ev)}\n                    value={this.state.rg}\n                    placeholder=\"000000-0\"\n                    name=\"rg\"\n                  />\n                  {isErrorRg && <Error>{errorMessage[0]}</Error>}\n                </Label>\n                <Label>\n                  <p>Orgão expedidor</p>\n                  <InputForm\n                    type=\"text\"\n                    onChange={ev => this.handleChange(\"orgao\", ev)}\n                    value={this.state.orgao}\n                    name=\"orgao\"\n                  />\n                  {isEmpty && <Error>{errorMessage[3]}</Error>}\n                </Label>\n              </span>\n              <span>\n                <Label>\n                  <p>uf</p>\n                  <InputForm\n                    type=\"text\"\n                    onChange={ev => this.handleChange(\"uf\", ev)}\n                    value={this.state.uf}\n                    name=\"uf\"\n                  />\n                  {isEmpty && <Error>{errorMessage[3]}</Error>}\n                </Label>\n                <Label>\n                  <p>data de nascimento</p>\n                  <InputForm\n                    type=\"number\"\n                    onChange={ev => this.handleChange(\"nascimento\", ev)}\n                    value={this.state.nascimento}\n                    placeholder=\"02/01/2020\"\n                    name=\"nascimento\"\n                  />\n                  {isEmpty && <Error>{errorMessage[3]}</Error>}\n                </Label>\n              </span>\n              <Label>\n                <p>cpf</p>\n                <Input\n                  type=\"number\"\n                  onChange={ev => this.handleChange(\"cpf\", ev)}\n                  value={this.state.cpf}\n                  placeholder=\"000000-0\"\n                  name=\"cpf\"\n                />\n\n                {isErrorCpf && <Error>{errorMessage[2]}</Error>}\n              </Label>\n              <Label>\n                <p>email</p>\n                <Input\n                  type=\"email\"\n                  onChange={ev => this.handleChange(\"email\", ev)}\n                  value={this.state.email}\n                  name=\"email\"\n                  placeholder=\"nome@mail.com\"\n                  require\n                />\n\n                {isEmpty && <Error>{errorMessage[3]}</Error>}\n              </Label>\n              <Label>\n                <p>telefone</p>\n                <Input\n                  type=\"tel\"\n                  onChange={ev => this.handleChange(\"telefone\", ev)}\n                  value={this.state.telefone}\n                  placeholder=\"(00) 00000-0000\"\n                  name=\"telefone\"\n                />\n                {isEmpty && <Error>{errorMessage[3]}</Error>}\n              </Label>\n              <Label>\n                <p>senha</p>\n                <Input\n                  className=\"input-password\"\n                  type={\n                    this.state.togglePassword === true ? \"text\" : \"password\"\n                  }\n                  onChange={ev => this.handleChange(\"senha\", ev)}\n                  value={this.state.senha}\n                  placeholder=\"Inserir senha\"\n                  name=\"password\"\n                />\n                {this.state.togglePassword === true ? (\n                  <span>\n                    <ImagePassword\n                      src={VisibilityOn}\n                      onClick={this.togglePassword}\n                    />\n                  </span>\n                ) : (\n                  <span>\n                    <ImagePassword\n                      src={VisibilityOff}\n                      onClick={this.togglePassword}\n                    />\n                  </span>\n                )}\n                {isErrorPassword && <Error>{errorMessage[1]}</Error>}\n              </Label>\n              <TextTerms>\n                Clique abaixo para concordar com os\n                <strong onClick={this.handleModalTerms}>\n                  Termos de Serviço\n                </strong>\n                e registrar.\n              </TextTerms>\n              <Button\n                text=\"concordar e criar conta\"\n                type=\"submit\"\n                onClick={this.handleSubmit}\n              />\n            </Form>\n          </Container>\n        )}\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FisicalPersonForm);\n"]},"metadata":{},"sourceType":"module"}