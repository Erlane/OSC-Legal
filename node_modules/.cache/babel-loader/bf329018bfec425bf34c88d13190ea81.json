{"ast":null,"code":"var _jsxFileName = \"/home/yasmin/Documentos/workspace/OSC/OSC-Legal/src/screens/onboarding/Login/LoginScreen.js\";\n// Libs\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux'; // Components\n\nimport ImageLogo from '../../../components/ImageLogo';\nimport Input from '../../../components/Input';\nimport Button from '../../../components/Button';\nimport VisibilityOn from \"../../../assets/visibility-on.svg\";\nimport VisibilityOff from \"../../../assets/visibility-off.svg\"; // Redux\n\nconst mapStateToProps = state => ({\n  email: state.signup.users.email,\n  password: state.signup.users.password\n});\n\nexport const ContainerForm = styled.div`\n  height: 100vh;\n  background-color: #FFCFCD;\n  display: flex;\n  align-items: center;\n\tjustify-content: center;\n  margin: 0;\n\n  @media (max-width: 648px) {\n\t\tbackground-color: #fff;\n\t\t\n\t}\n\n\t@media (max-width: 550px) {\n\t\tpadding: 1rem;\n\t}\n`;\nexport const Form = styled.form`\n  width: 32%;\n  background-color: #fff;\n\tborder-radius: 5px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n\t/* @media (max-width: 1440px) {\n\t\twidth: 34%;\n\t} */\n\n\t@media (max-width: 1200px) {\n\t\tmin-width: 40%;\n\t}\n\n\t@media (max-width: 982px) {\n\t\twidth: 53%;\n\t} \n\n  @media (max-width: 648px) {\n\t\twidth: 100%;\n\t}\n`;\nexport const InputBox = styled.span`\n\twidth: 70%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\n\t@media (max-width: 648px) {\n\t\twidth: 80%;\n\t}\n\n\t@media (max-width: 490px) {\n\t\twidth: 95%;\n\t}\n`;\nexport const ImagePassword = styled.img`\n  position: absolute;\n  bottom: ${props => props.off ? '1.2rem' : '0.875rem'};\n  right: 0.7rem;\n\tcursor: pointer;\n\n\t@media (max-width: 648px) {\n\t\tbottom: 1.2rem;\n\t}\n`;\nexport const Label = styled.label`\n  color: #85144b;\n  font-size: 0.75rem;\n  font-family: Overpass;\n\tfont-weight: bold;\n  margin-top: 0.6rem;\n  margin-bottom: 0.3rem;\n\tpadding-left: 0.8rem;\n\n\t@media (max-width: 648px) {\n\t\tmargin-top: 1rem;\n\t\tmargin-bottom: 0.6rem;\n\t}\n`;\nexport const Span = styled.span` \n  width: 70%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: 1rem 0 3rem;\n\n\n\t@media (max-width: 648px) {\n\t\twidth: 80%;\n\t\tmargin: 1.8rem;\n\t}\n\n\t@media (max-width: 490px) {\n\t\twidth: 95%;\n\t}\n`;\nexport const ButtonText = styled(Link)`\n  color: #85144B;\n  font-size: 0.9rem; \n  text-decoration: none;\n\ttext-transform: uppercase;\n`;\nexport const Error = styled.h4`\n  width: 63%;\n  color: #D63434; \n\tdisplay: flex;\n  justify-content: flex-end;\n  font-size: 0.6rem;\n  font-family: Eurostile, Medium;\n\n  @media (max-width: 499px) {\n\t\twidth: 85%;\n\t}\t\n\n\n  @media (max-width: 465px) {\n\t\twidth: 83%;\n\t}\t\n`;\n\nclass LoginScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = ev => {\n      ev.preventDefault();\n      this.handleError();\n      this.setState({\n        redirect: '/dashboard'\n      });\n    };\n\n    this.handleError = () => {\n      const {\n        email,\n        password\n      } = this.state;\n      const registeredEmail = this.props.email;\n      const registeredPassword = this.props.password;\n\n      if (email !== registeredEmail) {\n        this.setState({\n          error: true\n        });\n      }\n\n      if (password.length < 6) {\n        this.setState({\n          error: true\n        });\n      }\n\n      if (password != registeredPassword) {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.handleChangeEmail = ev => {\n      this.setState({\n        email: ev.target.value,\n        error: false\n      });\n    };\n\n    this.handleChangePassword = ev => {\n      this.setState({\n        password: ev.target.value,\n        error: false\n      });\n    };\n\n    this.handleChangeType = () => {\n      this.setState({\n        type: this.state.type === 'password' ? 'text' : 'password'\n      });\n    };\n\n    this.state = {\n      value: '',\n      email: this.props.email || '',\n      password: '',\n      passwordError: '',\n      error: undefined,\n      type: 'password'\n    };\n  }\n\n  render() {\n    return React.createElement(ContainerForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(ImageLogo, {\n      margin: \"3rem 0 6rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(InputBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"EMAIL\"), React.createElement(Input, {\n      login: true,\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.handleChangeEmail,\n      placeholder: \"name@email.com\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })), React.createElement(InputBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"SENHA\"), React.createElement(Input, {\n      login: true,\n      type: this.state.type,\n      value: this.state.password,\n      onChange: this.handleChangePassword,\n      placeholder: \"Inserir senha\",\n      isError: this.state.error,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(ImagePassword, {\n      src: this.state.type === 'password' ? VisibilityOn : VisibilityOff,\n      onClick: this.handleChangeType,\n      off: this.state.type === 'password',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }))), this.state.error && React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Email e/ ou senha incorreta\"), React.createElement(Button, {\n      width: \"70%\",\n      widthMobile: \"80%\",\n      widthMobileSmall: \"95%\",\n      padding: \"1rem\",\n      margin: \"2.5rem 0 1rem\",\n      marginMobile: \"3.7rem 0 1.5rem\",\n      text: \"entrar\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(Span, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(ButtonText, {\n      to: '/createuser',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"criar conta\"), React.createElement(ButtonText, {\n      to: '/resetpassword',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"resetar conta\"))), this.state.redirect && React.createElement(Redirect, {\n      to: './dashboard',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(mapStateToProps)(LoginScreen);","map":{"version":3,"sources":["/home/yasmin/Documentos/workspace/OSC/OSC-Legal/src/screens/onboarding/Login/LoginScreen.js"],"names":["React","styled","Link","Redirect","connect","ImageLogo","Input","Button","mapStateToProps","state","email","signup","users","password","ContainerForm","div","Form","form","InputBox","span","ImagePassword","img","props","off","Label","label","Span","ButtonText","Error","h4","LoginScreen","Component","constructor","handleSubmit","ev","preventDefault","handleError","setState","redirect","registeredEmail","registeredPassword","error","length","handleChangeEmail","target","value","handleChangePassword","handleChangeType","type","passwordError","undefined","render","VisibilityOn","VisibilityOff"],"mappings":"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","sourcesContent":["// Libs\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// Components\nimport ImageLogo from '../../../components/ImageLogo';\nimport Input from '../../../components/Input';\nimport Button from '../../../components/Button';\n\nimport VisibilityOn from '../../../assets/visibility-on.svg';\nimport VisibilityOff from '../../../assets/visibility-off.svg';\n\n// Redux\nconst mapStateToProps = state => ({\n\temail: state.signup.users.email,\n\tpassword: state.signup.users.password,\n});\n\nexport const ContainerForm = styled.div`\n  height: 100vh;\n  background-color: #FFCFCD;\n  display: flex;\n  align-items: center;\n\tjustify-content: center;\n  margin: 0;\n\n  @media (max-width: 648px) {\n\t\tbackground-color: #fff;\n\t\t\n\t}\n\n\t@media (max-width: 550px) {\n\t\tpadding: 1rem;\n\t}\n`;\n\nexport const Form = styled.form`\n  width: 32%;\n  background-color: #fff;\n\tborder-radius: 5px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n\t/* @media (max-width: 1440px) {\n\t\twidth: 34%;\n\t} */\n\n\t@media (max-width: 1200px) {\n\t\tmin-width: 40%;\n\t}\n\n\t@media (max-width: 982px) {\n\t\twidth: 53%;\n\t} \n\n  @media (max-width: 648px) {\n\t\twidth: 100%;\n\t}\n`;\n\nexport const InputBox = styled.span`\n\twidth: 70%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\n\t@media (max-width: 648px) {\n\t\twidth: 80%;\n\t}\n\n\t@media (max-width: 490px) {\n\t\twidth: 95%;\n\t}\n`;\n\nexport const ImagePassword = styled.img`\n  position: absolute;\n  bottom: ${props => (props.off ? '1.2rem' : '0.875rem')};\n  right: 0.7rem;\n\tcursor: pointer;\n\n\t@media (max-width: 648px) {\n\t\tbottom: 1.2rem;\n\t}\n`;\n\nexport const Label = styled.label`\n  color: #85144b;\n  font-size: 0.75rem;\n  font-family: Overpass;\n\tfont-weight: bold;\n  margin-top: 0.6rem;\n  margin-bottom: 0.3rem;\n\tpadding-left: 0.8rem;\n\n\t@media (max-width: 648px) {\n\t\tmargin-top: 1rem;\n\t\tmargin-bottom: 0.6rem;\n\t}\n`;\n\nexport const Span = styled.span` \n  width: 70%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: 1rem 0 3rem;\n\n\n\t@media (max-width: 648px) {\n\t\twidth: 80%;\n\t\tmargin: 1.8rem;\n\t}\n\n\t@media (max-width: 490px) {\n\t\twidth: 95%;\n\t}\n`;\n\nexport const ButtonText = styled(Link)`\n  color: #85144B;\n  font-size: 0.9rem; \n  text-decoration: none;\n\ttext-transform: uppercase;\n`;\n\nexport const Error = styled.h4`\n  width: 63%;\n  color: #D63434; \n\tdisplay: flex;\n  justify-content: flex-end;\n  font-size: 0.6rem;\n  font-family: Eurostile, Medium;\n\n  @media (max-width: 499px) {\n\t\twidth: 85%;\n\t}\t\n\n\n  @media (max-width: 465px) {\n\t\twidth: 83%;\n\t}\t\n`;\n\n\nclass LoginScreen extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue: '',\n\t\t\temail: this.props.email || '',\n\t\t\tpassword: '',\n\t\t\tpasswordError: '',\n\t\t\terror: undefined,\n\t\t\ttype: 'password',\n\t\t};\n\t}\n\n\thandleSubmit = (ev) => {\n\t\tev.preventDefault();\n\n\t\tthis.handleError();\n\n\t\tthis.setState({ redirect: '/dashboard' });\n\n\t}\n\n\thandleError = () => {\n\t\tconst { email, password } = this.state;\n\t\tconst registeredEmail = this.props.email;\n\t\tconst registeredPassword = this.props.password;\n\n\t\tif (email !== registeredEmail) {\n\t\t\tthis.setState({\n\t\t\t\terror: true,\n\t\t\t});\n\t\t}\n\n\t\tif (password.length < 6) {\n\t\t\tthis.setState({\n\t\t\t\terror: true,\n\t\t\t});\n\t\t}\n\n\t\tif (password != registeredPassword) {\n\t\t\tthis.setState({\n\t\t\t\terror: true,\n\t\t\t});\n\t\t}\n\t}\n\n\thandleChangeEmail = (ev) => {\n\t\tthis.setState({\n\t\t\temail: ev.target.value,\n\t\t\terror: false,\n\t\t});\n\t};\n\n\thandleChangePassword = (ev) => {\n\t\tthis.setState({\n\t\t\tpassword: ev.target.value,\n\t\t\terror: false,\n\t\t});\n\t}\n\n\thandleChangeType = () => {\n\t\tthis.setState({\n\t\t\ttype: this.state.type === 'password' ? 'text' : 'password',\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ContainerForm>\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<ImageLogo margin='3rem 0 6rem' />\n\t\t\t\t\t<InputBox>\n\t\t\t\t\t\t<Label>EMAIL</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\tonChange={this.handleChangeEmail}\n\t\t\t\t\t\t\tplaceholder=\"name@email.com\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InputBox>\n\t\t\t\t\t<InputBox>\n\t\t\t\t\t\t<Label>SENHA</Label>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\ttype={this.state.type}\n\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\tonChange={this.handleChangePassword}\n\t\t\t\t\t\t\tplaceholder=\"Inserir senha\"\n\t\t\t\t\t\t\tisError={this.state.error}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<ImagePassword\n\t\t\t\t\t\t\t\tsrc={this.state.type === 'password' ? VisibilityOn : VisibilityOff}\n\t\t\t\t\t\t\t\tonClick={this.handleChangeType}\n\t\t\t\t\t\t\t\toff={this.state.type === 'password'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</InputBox>\n\t\t\t\t\t{this.state.error && <Error>Email e/ ou senha incorreta</Error>}\n\t\t\t\t\t{/* {this.state.error && <Error>Endereço de email inválido</Error> */}\n\t\t\t\t\t<Button\n\t\t\t\t\t\twidth='70%'\n\t\t\t\t\t\twidthMobile='80%'\n\t\t\t\t\t\twidthMobileSmall='95%'\n\t\t\t\t\t\tpadding='1rem'\n\t\t\t\t\t\tmargin='2.5rem 0 1rem'\n\t\t\t\t\t\tmarginMobile='3.7rem 0 1.5rem'\n\t\t\t\t\t\ttext=\"entrar\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Span>\n\t\t\t\t\t\t<ButtonText to={'/createuser'}>criar conta</ButtonText>\n\t\t\t\t\t\t<ButtonText to={'/resetpassword'}>resetar conta</ButtonText>\n\t\t\t\t\t</Span>\n\t\t\t\t</Form>\n\t\t\t\t{this.state.redirect && <Redirect to={'./dashboard'} />}\n\t\t\t</ContainerForm>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps)(LoginScreen);\n"]},"metadata":{},"sourceType":"module"}